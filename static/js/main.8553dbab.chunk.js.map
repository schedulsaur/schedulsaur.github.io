{"version":3,"sources":["components/Dashboard/Dashboard.module.css","components/TimeAvailability/TimePopup.module.css","Map2.png","components/History/History.module.css","components/Other/About.module.css","components/Authentication/Auth.module.css","components/Nav/TopBar.js","components/Nav/NavBar.js","components/Authentication/Login.js","components/Authentication/Signup.js","components/Dashboard/ProgressWheel.js","components/Dashboard/StudentInfo.js","components/Dashboard/DashBoard.js","store/actions/studentActions.js","components/CourseHistory/Course.js","store/actions/courseActions.js","components/CourseHistory/CourseBox.js","components/CourseHistory/Curriculum.js","components/Flowchart/Flowchart.js","components/History/CourseHistory.js","components/TimeAvailability/TimeNameEdit.js","components/TimeAvailability/TimeNameNormal.js","components/TimeAvailability/SavedTimes.js","store/actions/timeActions.js","components/TimeAvailability/TableHeader.js","components/TimeAvailability/TableBody.js","components/TimeAvailability/TimeTable.js","components/TimeAvailability/TimePopup.js","components/TimeAvailability/Time.js","components/History/DesiredCourse.js","components/Schedules/ScheduleHeader.js","components/Schedules/ScheduleBody.js","components/Schedules/Schedule.js","components/Schedules/ScheduleExpand.js","store/actions/scheduleActions.js","components/Schedules/ScheduleList.js","components/Schedules/Dropdown.js","components/Schedules/SortFilter.js","components/Schedules/PotentialSchedules.js","components/Schedules/SavedSchedules.js","components/Other/About.js","components/Other/Help.js","App.js","serviceWorker.js","store/reducers/studentReducer.js","store/reducers/timeReducer.js","store/reducers/scheduleReducer.js","store/reducers/courseHistoryReducer.js","store/reducers/flowchartReducer.js","store/reducers/rootReducer.js","index.js","components/TimeAvailability/TimeTable.module.css","components/Schedules/SchedList.module.css","components/Flowchart/Flow.module.css","components/TimeAvailability/Time.module.css","components/Schedules/Schedule.module.css","components/Schedules/MainSched.module.css","components/TimeAvailability/TimeName.module.css","components/Schedules/SchedExpand.module.css","components/Schedules/Dropdown.module.css","components/TimeAvailability/SavedTimes.module.css","components/Schedules/SortFilter.module.css"],"names":["module","exports","main_container","prog_container","main_wheel","sub_wheel","wheel","wheel_text","student_container","info_container","info","text","bottom_container","button_container","main-wheel-container","student-container","button_popup","__webpack_require__","p","modal","header","about_container","title_offset","text_container","version","form_container","login_button","signup_button","TopBar","react_default","a","createElement","className","withRouter","props","react_router_dom","to","Login","state","email","password","handleSubmit","e","preventDefault","_this","history","push","handleChange","setState","Object","defineProperty","target","id","value","handleSignUp","styles","onSubmit","this","type","placeholder","onChange","concat","onClick","Component","Signup","firstName","lastName","hangleChange","ProgressWheel","percentage","_this2","interval","setInterval","progress","clearInterval","align","style","height","size","width","dist_default","animationDuration","textColor","progressColor","x","y","textAnchor","desc","StudentInfo","_this$props","edit","student_info","margin","DashBoard","type0","student","type1","type2","type3","type4","handleEdit","handleSave","isEdit","save","createInfo","slice","map","element","index","key","Dashboard_StudentInfo","Dashboard_ProgressWheel","major_percent","support_percent","ge_percent","editButton","connect","ownProps","dispatch","tempM","tempC","tempE","tempUT","tempUP","major","catalog","expected","units_this","units_per","Course","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","updateDesiredClasses","desiredCourses","courseHistory","desired_courses","console","log","includes","courseName","removeDesired","addDesired","updateCompletedClasses","takenCourses","courses_taken","removeHistory","addHistory","handleClick","pageType","hasTaken","isDisabled","hasLineThrough","changeColor","color","changeWhite","inherits","createClass","onMouseEnter","onMouseLeave","backgroundColor","textDecoration","es_checkbox","autoFocus","defaultChecked","disabled","CourseBox","getGEs","ge_list","course","components_CourseHistory_Course","getMajorCourses","csc_major","getSupports","csc_support","courseContent","boxType","myRef","React","createRef","current","scrollTop","title","ref","Curriculum","_ref","components_CourseHistory_CourseBox","Flowchart","createBox","coursesTaken","boxState","name","filter","border","box","csc_box","fontSize","marginTop","support_box","ge_box","empty_box","createRow","row","len","createGrid","flowchart","grid","keys","forEach","courses","grid_container","CourseHistory","viewCurriculum","getView","CourseHistory_Curriculum","components_Flowchart_Flowchart","getButtonText","handleSwitch","componentDidMount","reactjs_popup_es","trigger","marginRight","contentStyle","maxWidth","closeOnDocumentClick","overlayStyle","close","TimeNameEdit","time","onView","onEdit","onSave","onDelete","TimeNameNormal","slot_container","time_name","onDoubleClick","SavedTimes","tempName","handleNameChange","handleNameEdit","editName","getAttribute","handleNameSave","saveName","handleDelete","del","handleView","view","normalOrEditBox","TimeAvailability_TimeNameEdit","TimeAvailability_TimeNameNormal","storeSavedTimes","savedList","length","time_li","time_ul","saved","TableHeader","days","day","day_name","table_tr","TableBody","fillRow","row_index","available","selected","row_id","col_id","bgcolor","table_td","handleSelect","times","table","time_slot","TimeTable","changeAvailable","storeTimeTable","time_table","TimeAvailability_TableHeader","TimeAvailability_TableBody","isViewing","TimePopup","Time","handleClear","clear","getButton","TimeAvailability_TimePopup","storeIsViewing","saved_container","saved_content","name_list","TimeAvailability_SavedTimes","selection_container","selection_content","paddingTop","table_container","TimeAvailability_TimeTable","DesiredCourse","ScheduleHeader","headers","descriptors","sched_cell","sched_row","ScheduleBody","values","hasOwnProperty","classes","Schedule","schedule","sched_table","sched_header","Schedules_ScheduleHeader","Schedules_ScheduleBody","ScheduleExpand","disableScroll","list","document","getElementsByClassName","classList","remove","add","enableScroll","layout","image","onMouseOver","PinchZoomPan_default","position","initialScale","maxScale","zoomButtons","src","Map","alt","smallTable","ScheduleList","checked","select","deselect","expandSchedule","viewing","Schedules_ScheduleExpand","showCheckBox","addCheckBoxes","schedule_id","check_box","box_green","listSchedules","schedules","li","sched_entry","sched_name","check_container","modified","Schedules_Schedule","storeDescriptors","storeViewing","emptyText","schedulesList","ul","marginBottom","empty","Dropdown","isOpen","handleClickOutside","toggleList","angleIcon","elements","borderBottom","marginLeft","listelements","dropdown_content","dropdown","drop","SortFilter","sorters","filters","sf_container","content_container","Schedules_Dropdown","PotentialSchedules","storeSchedules","storeSorters","storeFilters","list_container","Schedules_ScheduleList","filter_container","Schedules_SortFilter","SavedSchedules","storeSavedSchedules","onwProps","savedSchedules","About","goBack","Help","App","react_router","exact","path","component","Nav_TopBar","components_Nav_NavBar","Boolean","window","location","hostname","match","initState","studentReducer","arguments","undefined","action","newInfo","objectSpread","newEditButton","availability","isCreating","cloneTable","newTable","toConsumableArray","fill","cloneSavedDefault","newSaved","cloneSavedEdit","timeReducer","editSaved","addSaved","changeTable","viewSaved","savedTable","newTimeTable","newTime","parseInt","toString","emptyTable","emptySaved","newSavedList","sec","num","instr","open","res","tak","wait","status","start","end","cloneViewing","newViewing","scheduleReducer","editViewing","haveSelected","haveNotSelected","Set","newSavedSchedules","newSchedules","filterSchedules","courseHistoryReducer","produce","draft","row1","row2","row3","row4","row5","row6","row7","flowchartReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister","green_check_box","lever","filled-in","time-table-container"],"mappings":"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","file":"static/js/main.8553dbab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"Dashboard_main_container__SZHcx\",\"prog_container\":\"Dashboard_prog_container__311VD\",\"main_wheel\":\"Dashboard_main_wheel__2n3tG\",\"sub_wheel\":\"Dashboard_sub_wheel__mcwS0\",\"wheel\":\"Dashboard_wheel__1xfQi\",\"wheel_text\":\"Dashboard_wheel_text__1915I\",\"student_container\":\"Dashboard_student_container__3ai8x\",\"info_container\":\"Dashboard_info_container__2DAvn\",\"info\":\"Dashboard_info__37qPI\",\"text\":\"Dashboard_text__GeGpq\",\"bottom_container\":\"Dashboard_bottom_container__1M9t2\",\"button_container\":\"Dashboard_button_container__2C4H6\",\"main-wheel-container\":\"Dashboard_main-wheel-container__2T7SU\",\"student-container\":\"Dashboard_student-container__318_b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_popup\":\"TimePopup_button_popup__3fXK8\"};","module.exports = __webpack_public_path__ + \"static/media/Map2.e605634e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"History_main_container__3gsYP\",\"button_container\":\"History_button_container__2Oh76\",\"modal\":\"History_modal__39JMG\",\"header\":\"History_header__3MM91\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about_container\":\"About_about_container__1XeTY\",\"title_offset\":\"About_title_offset__XAjN8\",\"info_container\":\"About_info_container__2aJto\",\"text_container\":\"About_text_container__2t2JR\",\"button_container\":\"About_button_container__18an4\",\"text\":\"About_text__1f9vq\",\"version\":\"About_version__1qrfH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"Auth_main_container__1f6je\",\"form_container\":\"Auth_form_container__34h0i\",\"button_container\":\"Auth_button_container__2nmRl\",\"login_button\":\"Auth_login_button__3o9hZ\",\"signup_button\":\"Auth_signup_button__1MlE9\"};","import React from 'react';\n\nconst TopBar = () => {\n    return (\n        <div className='header'>\n            <div className='logo'> Schedulsaur </div>\n        </div>\n    )\n}\n\n\nexport default TopBar;","import React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport \"./NavBar.css\";\n\nconst NavBar = props => {\n  return (\n    <div className=\"sidebar\">\n      {/* // NavLink navigates to a new page specified by 'to' attribute */}\n\n      <NavLink className=\"dashboard-button\" to=\"/DashBoard\">\n        Dashboard\n      </NavLink>\n\n      <NavLink className=\"sidebar-button\" to=\"/CourseHistory\">\n        Course History\n      </NavLink>\n\n      <NavLink className=\"sidebar-button\" to=\"/TimeAvailability\">\n        Time Availability\n      </NavLink>\n\n      <NavLink className=\"sidebar-button\" to=\"/DesiredCourses\">\n        Desired Course\n      </NavLink>\n\n      <NavLink className=\"sidebar-button\" to=\"/CreateSchedules\">\n        Create Schedules\n      </NavLink>\n\n      <NavLink className=\"dashboard-button\" to=\"/SavedSchedules\">\n        Saved Schedules\n      </NavLink>\n\n      <NavLink className=\"sidebar-button\" to=\"/Help\">\n        Help\n      </NavLink>\n\n      <NavLink className=\"sidebar-button\" to=\"/About\">\n        About\n      </NavLink>\n\n      <NavLink className=\"sidebar-button\" to=\"/\">\n        Log Out\n      </NavLink>\n    </div>\n  );\n};\n\nexport default withRouter(NavBar);\n","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './Auth.module.css';\n\n\nclass Login extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n\n        // *** need to authenticate account here\n        // *** need to authenticate account here\n\n        this.props.history.push('/DashBoard')\n    }\n\n    handleChange = (e) => {\n        this.setState({\n           [e.target.id]: e.target.value\n        })\n    }\n\n    handleSignUp = (e) => {\n        this.props.history.push('/Signup')\n    }\n\n    render(){\n        return(\n            <div className={styles.main_container}>\n                <div className='title-container'>\n                  <h1 className='title'>Schedulsaur</h1>\n                  <h5 className='title-description'>a friendly schedule finder</h5>\n                </div>\n                <form className={styles.form_container} onSubmit={this.handleSubmit} >\n                    <input type='email' id='email' placeholder='email' onChange={this.handleChange}/>\n                    <input type='password' id='password' placeholder='password' onChange={this.handleChange}/>\n                    <div className={styles.button_container}>\n                      <button className={`btn-small ${styles.signup_button}`} onClick={this.handleSignUp}>\n                          Sign Up\n                      </button>\n                      <button className={`btn-small ${styles.login_button}`}>\n                          Log In\n                      </button>\n                    </div>\n                </form>\n                <footer className='footer'>\n                    <h5><NavLink to='./About' className='white-text'>About</NavLink></h5>\n                </footer>\n            </div>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport styles from './Auth.module.css';\n\nclass Signup extends Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n\n        // *** need to authenticate here and create new account here\n        // *** need to authenticate here and create new account here\n\n        this.props.history.push('./Dashboard')\n    }\n\n    hangleChange = (e) => {\n        this.setState({\n           [e.target.id]: e.target.value\n        })\n    }\n\n    render(){\n        return(\n            <div className={styles.main_container}>\n                <div className='title-container'>\n                    <h1 className='title'>Schedulsaur</h1>\n                    <h5 className='title-description'>a friendly schedule finder</h5>\n                </div>\n                <form className={styles.form_container} onSubmit={this.handleSubmit} >\n                    <input type='text' id='firstName' placeholder='first name' onChange={this.handleChange}/>\n                    <input type='text' id='lastName' placeholder='last name' onChange={this.handleChange}/>\n                    <input type='email' id='email' placeholder='email' onChange={this.handleChange}/>\n                    <input type='password' id='password' placeholder='password' onChange={this.handleChange}/>\n                    <div className={styles.button_container}>\n                        <button className={`btn ${styles.signup_button}`}>\n                            Sign Up\n                        </button>\n                    </div>\n                </form>\n                <footer className='footer'>\n                    <h5><NavLink to='./About' className='white-text'>About</NavLink></h5>\n                </footer>\n            </div>\n        )\n    }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport Circle from 'react-circle';\nimport styles from './Dashboard.module.css';\n\n/**\n *------------------------------------------------------- \n * Component to create the progress wheel \n *------------------------------------------------------- \n */\n\nclass ProgressWheel extends Component{\n    state = {\n        percentage: 0\n    }\n\n    // Used for progress wheel animation\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            this.setState({\n                percentage: this.props.progress\n            })\n        }, );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n\n    render(){\n        return(\n            <svg align='center' style={{height: this.props.size, width: this.props.size}} \n                className={styles.wheel}>\n                <Circle \n                    progress={this.state.percentage}\n                    animationDuration='1s'\n                    size='100%'\n                    textColor='#fff'\n                    progressColor='#5ea181'\n                />\n                <text className={styles.wheel_text} x='50%' y='48%' textAnchor='middle'>\n                    {this.state.percentage + '%'}\n                </text>\n                <text className={styles.wheel_text} x='50%' y='60%' textAnchor='middle'>\n                    {this.props.desc}\n                </text>\n            </svg>\n        );\n    }\n}\n\nexport default ProgressWheel;","import React, { Component } from 'react';\nimport styles from './Dashboard.module.css';\n\n/**\n *------------------------------------------------------- \n * component that creates the student information\n *------------------------------------------------------- \n */\n\nclass StudentInfo extends Component{\n\n    render(){\n        const { id, info, edit, handleChange } = this.props;\n\n        // show text field if editing\n        const student_info = edit ? (\n            <input style={{margin:'0'}} type='text' id={id} placeholder={info} onChange={handleChange}/>) : (\n\n        // show student information if not editing\n            ' ' + info\n        )\n\n        return(\n            <span className={styles.text}>\n                {student_info}\n            </span>\n        );\n    }\n}\n\nexport default StudentInfo;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProgressWheel from './ProgressWheel';\nimport StudentInfo from './StudentInfo';\nimport { edit, save } from '../../store/actions/studentActions'\nimport styles from './Dashboard.module.css';\n\n/**\n *------------------------------------------------------- \n * Main Dashboard Component\n *------------------------------------------------------- \n */\n\nclass DashBoard extends Component{\n\n    state = {\n        type0: this.props.student.info[0].text,\n        type1: this.props.student.info[1].text,\n        type2: this.props.student.info[2].text,\n        type3: this.props.student.info[3].text,\n        type4: this.props.student.info[4].text\n    }\n\n    /**\n     * --- Called when input text is changing in StudentInfo component \n    */\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    /**\n     * --- Called when edit profile button is clicked\n    */\n    handleEdit = () => {\n        this.props.edit();\n    }\n\n    /**\n     * --- Called when save button is clicked\n    */\n    handleSave = () => {\n        if(this.props.student.isEdit===true){\n            this.props.save(\n                this.state.type0,\n                this.state.type1,\n                this.state.type2,\n                this.state.type3,\n                this.state.type4\n            )\n        }\n    }\n\n    /**\n     * --- Creates the student info section of the dashboard\n     */\n    createInfo = () => {\n        let student_info = \n            this.props.student.info.slice(1).map((element, index) => {\n                return(\n                    <div key={index}>{element.type + ': '}\n                        <StudentInfo id={'type'+index} info={element.text} \n                                     edit={this.props.student.isEdit}\n                                     handleChange={this.handleChange}\n                        />\n                    </div>\n                )\n        })\n        return (student_info)\n    }\n\n    render(){\n        const { student } = this.props;\n        return(\n            <div>\n                <h2 className='subtitle' align='center'>Dashboard</h2>\n                <div className={styles.main_container}>\n\n                    {/* // Left Section of Dashboard */}\n\n                    <div className={styles.prog_container}>\n                        <div className={styles.main_wheel}>\n                            <ProgressWheel progress={student.major_percent} size='100%' desc='Degree'/>\n                        </div>\n                        <div className={styles.sub_wheel}>\n                            <ProgressWheel progress={student.support_percent} size='65%' desc='Support'/>\n                            <ProgressWheel progress={student.ge_percent} size='65%' desc='GE'/>\n                        </div>\n                    </div>\n\n                    {/* // Right Section of Dashboard */}\n\n                    <div className={styles.student_container}>\n                        <div className={`${styles.info_container} subsubtitle`}>\n                            <div> Name:  \n                                <span className={styles.text}>\n                                    {' ' + student.info[0].text}\n                                </span>\n                            </div>\n                            <div className={styles.info}>\n                                {this.createInfo()}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                    {/* // Bottom Section of Dashboard */}\n\n                <div className={styles.bottom_container}>\n                    <div className='description'>\n                        *Degree Progress is Measured with the classes you have inputted.\n                    </div>\n                    <div className={styles.button_container}>\n                        <button className='white_button' onClick={this.handleEdit}>\n                            {student.editButton}\n                        </button>\n                        <button className='green_button' onClick={this.handleSave}>\n                            Save\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n/**\n * mapStateToProps\n * \n * @description maps state from store to props\n * @param {*} state \n * @param {*} ownProps \n */\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        student: state.student\n    }\n}\n\n/**\n * mapStateToDispatch\n * \n * @description maps dispatch to props to allow component to send an action\n * @param {*} dispatch \n */\nconst mapStateToDispatch = (dispatch) => {\n    return{\n        save: (tempM, tempC, tempE, tempUT, tempUP) => { dispatch(save(tempM, tempC, tempE, tempUT, tempUP)) },\n        edit: () => { dispatch(edit()) }\n    }\n}\n\n// 'connect' allows component to access the state from the store\n\nexport default connect(mapStateToProps, mapStateToDispatch)(DashBoard);","/**\n * edit\n * \n * @desc Edit the user's information\n */\nexport const edit = () => {\n    return{\n        type: 'EDIT_INFO'\n    }\n}\n\n/**\n * save \n * \n * @description Save the user's information\n * @param {*} major \n * @param {*} catalog \n * @param {*} expected \n * @param {*} units_this \n * @param {*} units_per \n */\nexport const save = (major, catalog, expected, units_this, units_per) => {\n    return{\n        type: 'STUDENT_SAVE',\n        major: major,\n        catalog: catalog,\n        expected: expected,\n        units_this: units_this,\n        units_per: units_per\n    }\n}\n\n","import React, { Component } from \"react\";\nimport \"./Course.css\";\nimport { Checkbox } from \"antd\";\nimport { connect } from \"react-redux\";\nimport {\n  addHistory,\n  removeHistory,\n  removeDesired,\n  addDesired\n} from \"../../store/actions/courseActions\";\n\nexport class Course extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      color: \"white\"\n    };\n  }\n\n  updateDesiredClasses = () => {\n    const desiredCourses = this.props.courseHistory.desired_courses;\n    console.log(desiredCourses);\n    if (desiredCourses.includes(this.props.courseName)) {\n      this.props.removeDesired(this.props.courseName);\n    } else {\n      this.props.addDesired(this.props.courseName);\n    }\n  };\n\n  updateCompletedClasses = () => {\n    const takenCourses = this.props.courseHistory.courses_taken;\n    console.log(takenCourses);\n    if (takenCourses.includes(this.props.courseName)) {\n      this.props.removeHistory(this.props.courseName);\n    } else {\n      this.props.addHistory(this.props.courseName);\n    }\n  };\n\n  handleClick = () => {\n    switch (this.props.pageType) {\n      case \"Desired\":\n        this.updateDesiredClasses();\n        break;\n      case \"Completed\":\n        this.updateCompletedClasses();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  hasTaken = () => {\n    const takenCourses = this.props.courseHistory.courses_taken;\n    const desiredCourses = this.props.courseHistory.desired_courses;\n\n    switch (this.props.pageType) {\n      case \"Desired\":\n        if (desiredCourses.includes(this.props.courseName)) {\n          return true;\n        }\n        if (takenCourses.includes(this.props.courseName)) {\n          return true;\n        }\n        return false;\n\n      case \"Completed\":\n        if (takenCourses.includes(this.props.courseName)) {\n          return true;\n        }\n        return false;\n\n      default:\n        return false;\n    }\n  };\n\n  isDisabled = () => {\n    if (\n      this.props.courseHistory.courses_taken.includes(this.props.courseName) &&\n      this.props.pageType === \"Desired\"\n    ) {\n    }\n    return false;\n  };\n\n  hasLineThrough = () => {\n    if (this.isDisabled()) {\n      return \"line-through\";\n    }\n    return \"none\";\n  };\n\n  changeColor = () => {\n    this.setState({ color: \"#f2f2f2\" });\n  };\n\n  changeWhite = () => {\n    this.setState({ color: \"white\" });\n  };\n\n  render() {\n    return (\n      <div\n        className=\"course\"\n        onMouseEnter={this.changeColor}\n        onMouseLeave={this.changeWhite}\n        style={{\n          backgroundColor: this.state.color,\n          textDecoration: this.hasLineThrough()\n        }}\n      >\n        <div className=\"leftSection\">\n          <Checkbox\n            onClick={this.handleClick}\n            className=\"checkBox\"\n            autoFocus={true}\n            defaultChecked={this.hasTaken()}\n            disabled={this.isDisabled()}\n          />\n        </div>\n        <div className=\"midSection\"> {this.props.courseName} </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    courseHistory: state.courseHistory\n  };\n};\n\nconst mapStateToDispatch = dispatch => {\n  return {\n    removeHistory: courseName => {\n      dispatch(removeHistory(courseName));\n    },\n    addHistory: courseName => {\n      dispatch(addHistory(courseName));\n    },\n    removeDesired: courseName => {\n      dispatch(removeDesired(courseName));\n    },\n    addDesired: courseName => {\n      dispatch(addDesired(courseName));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapStateToDispatch\n)(Course);\n","export const removeHistory = courseName => {\n  return {\n    type: \"REMOVE_HISTORY\",\n    courseName: courseName\n  };\n};\n\nexport const addHistory = courseName => {\n  return {\n    type: \"ADD_HISTORY\",\n    courseName: courseName\n  };\n};\n\nexport const removeDesired = courseName => {\n  return {\n    type: \"REMOVE_DESIRED\",\n    courseName: courseName\n  };\n};\n\nexport const addDesired = courseName => {\n  return {\n    type: \"ADD_DESIRED\",\n    courseName: courseName\n  };\n};\n","import React, { Component } from \"react\";\nimport \"./CourseBox.css\";\nimport Course from \"./Course\";\nimport { connect } from \"react-redux\";\n\nexport class CourseBox extends Component {\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  getGEs = () => {\n    return this.props.courseHistory.ge_list.map(course => (\n      <Course pageType={this.props.pageType} courseName={course} />\n    ));\n  };\n\n  getMajorCourses = () => {\n    return this.props.courseHistory.csc_major.map(course => (\n      <Course pageType={this.props.pageType} courseName={course} />\n    ));\n  };\n\n  getSupports = () => {\n    return this.props.courseHistory.csc_support.map(course => (\n      <Course pageType={this.props.pageType} courseName={course} />\n    ));\n  };\n\n  courseContent = () => {\n    switch (this.props.boxType) {\n      case \"major\":\n        return this.getMajorCourses();\n\n      case \"support\":\n        return this.getSupports();\n\n      case \"ge\":\n        return this.getGEs();\n\n      default:\n        return null;\n    }\n  };\n\n  componentDidMount() {\n    this.myRef.current.scrollTop = 0;\n  }\n\n  render() {\n    return (\n      <div className=\"course-box\">\n        <h1 align=\"center\" className=\"box-header\">\n          {this.props.title}\n        </h1>\n        <div\n          ref={this.myRef}\n          className=\"course-section\"\n          style={{ height: this.props.height }}\n        >\n          {this.courseContent()}\n        </div>\n      </div>\n    );\n  }\n}\n/*\n * mapStateToProps\n *\n * @description maps state from store to props\n * @param {*} state\n * @param {*} ownProps\n */\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    courseHistory: state.courseHistory\n  };\n};\n\n/**\n * mapStateToDispatch\n *\n * @description maps dispatch to props to allow component to send an action\n * @param {*} dispatch\n */\nconst mapStateToDispatch = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapStateToDispatch\n)(CourseBox);\n","import React from \"react\";\nimport CourseBox from \"./CourseBox\";\nimport \"./CourseHistory.css\";\n\nconst Curriculum = ({ type }) => {\n  return (\n    <div>\n      <div className=\"course-history\">\n        <div className=\"major\">\n          <CourseBox\n            className=\"major\"\n            height=\"500px\"\n            title={\"Major (\" + type + \")\"}\n            boxType=\"major\"\n            pageType={type}\n          />\n        </div>\n        <div className=\"support\">\n          <CourseBox\n            boxType=\"support\"\n            height=\"450px\"\n            title={\"Support (\" + type + \")\"}\n            pageType={type}\n          />\n        </div>\n        <div className=\"ge\">\n          <CourseBox\n            height=\"300px\"\n            title={\"GEs (\" + type + \")\"}\n            boxType={\"ge\"}\n            pageType={type}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Curriculum;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./Flow.module.css\";\n\nclass Flowchart extends Component {\n  /**\n   * --- Used to create the individual course boxes\n   */\n  createBox = course => {\n    let coursesTaken = this.props.courseHistory.courses_taken;\n    let desiredCourses = this.props.courseHistory.desired_courses;\n    let boxState = {};\n\n    if (coursesTaken.includes(course.name)) {\n      boxState = { filter: \"brightness(60%)\" };\n    }\n\n    if (desiredCourses.includes(course.name)) {\n      boxState = { border: \"2px solid green\" };\n    }\n\n    switch (course.type) {\n      case \"CSC\":\n        return (\n          <div className={`${styles.box} ${styles.csc_box}`} style={boxState}>\n            <div style={{ fontSize: \"3px\" }}>CSC</div>\n            <div style={{ fontSize: \"10px\", marginTop: \"2px\" }}>\n              {course.name}\n            </div>\n          </div>\n        );\n      case \"Support\":\n        return (\n          <div\n            className={`${styles.box} ${styles.support_box}`}\n            style={boxState}\n          >\n            <div style={{ fontSize: \"3px\" }}>Support</div>\n            <div style={{ fontSize: \"10px\", marginTop: \"2px\" }}>\n              {course.name}\n            </div>\n          </div>\n        );\n      case \"GE\":\n        return (\n          <div className={`${styles.box} ${styles.ge_box}`} style={boxState}>\n            <div style={{ fontSize: \"3px\" }}>GE</div>\n            <div style={{ fontSize: \"10px\", marginTop: \"2px\" }}>\n              {course.name}\n            </div>\n          </div>\n        );\n      default:\n        return <div className={styles.empty_box} />;\n    }\n  };\n\n  /**\n   * --- Used to create a row of courses\n   */\n  createRow = row => {\n    return row.map((course, index) => {\n      return (\n        <div key={index} className={\"col s\" + course.len}>\n          {this.createBox(course)}\n        </div>\n      );\n    });\n  };\n\n  /**\n   * --- Used to create the flowchart grid\n   */\n  createGrid = flowchart => {\n    let grid = [];\n    Object.keys(flowchart).forEach((row, index) => {\n      grid.push(\n        <div key={index} className=\"row\">\n          {this.createRow(flowchart[row])}\n        </div>\n      );\n    });\n    return grid;\n  };\n\n  render() {\n    console.log(this.props.courseHistory.desired_courses);\n    const { courses } = this.props;\n    return (\n      <div className={styles.grid_container}>\n        {this.createGrid(courses.flowchart)}\n      </div>\n    );\n  }\n}\n\n/**\n * mapStateToProps\n *\n * @description maps state from store to props\n * @param {*} state\n * @param {*} ownProps\n */\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    courses: state.flowchart,\n    courseHistory: state.courseHistory\n  };\n};\n\n// 'connect' allows component to access the state from the store\n\nexport default connect(mapStateToProps)(Flowchart);\n","import React, { Component } from \"react\";\nimport Curriculum from \"../CourseHistory/Curriculum\";\nimport Flowchart from \"../Flowchart/Flowchart\";\nimport styles from \"./History.module.css\";\nimport Popup from \"reactjs-popup\";\n\n/**\n *-------------------------------------------------------\n * Main Course History Component\n *-------------------------------------------------------\n *\n * Contains both the curriculum view and flowchart\n *  for classes a student has already taken\n *\n *-------------------------------------------------------\n */\n\nclass CourseHistory extends Component {\n  state = {\n    viewCurriculum: true\n  };\n\n  /*\n   * --- Generate either the curriculum or the flowchart\n   */\n  getView = () => {\n    let view = this.state.viewCurriculum ? (\n      <div className={styles.main_container}>\n        <Curriculum type={\"Completed\"} />\n      </div>\n    ) : (\n      <div className={styles.main_container}>\n        <h2 className=\"subtitle\" align=\"center\">\n          Completed Classes\n        </h2>\n        <Flowchart />\n      </div>\n    );\n    return view;\n  };\n\n  /*\n   * --- Change the button depending on page\n   */\n  getButtonText = () => {\n    let text = this.state.viewCurriculum ? \"Flowchart\" : \"Curriculum\";\n    return text;\n  };\n\n  /*\n   * --- Switch to either the curriculum or the flowchart\n   */\n  handleSwitch = () => {\n    this.setState({\n      viewCurriculum: !this.state.viewCurriculum\n    });\n  };\n\n  componentDidMount = () => {\n    console.log(\"yo\");\n  };\n\n  render() {\n    return (\n      <div>\n        {this.getView()}\n        <div align=\"right\" className={styles.button_container}>\n          <Popup\n            trigger={\n              <button\n                className=\"white_button\"\n                style={{ marginRight: \"0px\" }}\n                onClick={this.handleSave}\n              >\n                Save\n              </button>\n            }\n            modal\n            contentStyle={{ maxWidth: \"459px\", width: \"90%\" }}\n            closeOnDocumentClick\n            overlayStyle={{ width: \"100%\" }}\n          >\n            {close => (\n              <div className={styles.modal}>\n                <div className={styles.header}>Confirm Courses</div>\n                <button onClick={close} className=\"white_button\">\n                  Cancel\n                </button>\n                <button onClick={close} className=\"green_button\">\n                  Save\n                </button>\n              </div>\n            )}\n          </Popup>\n          <button className=\"green_button\" onClick={this.handleSwitch}>\n            {this.getButtonText()}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CourseHistory;\n","import React from 'react';\nimport styles from './TimeName.module.css';\n\n/**\n *------------------------------------------------------- \n * Component to create the edited version of time names\n *------------------------------------------------------- \n * \n * The edited version displays the name and the cancel, \n *  save, delete, and view buttons in the saved \n *  availability section\n * \n *------------------------------------------------------- \n * @param {array} time 'saved' array (in store)\n * @param onView method to change state when viewing \n * @param onChange method to change state when changing name\n * @param onEdit method to change state when editting name\n * @param onSave method to change state when saving name\n * @param onDelete method to change state when deleting name\n * @param {*} index index of name in saved availability section\n */\n\nconst TimeNameEdit = ({time, onView, onChange, onEdit, onSave, onDelete, index}) => {\n    return(\n        <div>\n            <form id={time.id} index={index} onSubmit={onSave}>\n                <div>\n                    <input type='text' id={time.id} index={index} placeholder={time.name} onChange={onChange}/>\n                </div>\n            </form>\n            <div className={styles.button_container}>\n                <button className='list-button-white' id={time.id} index={index} onClick={onEdit}>\n                        Cancel\n                </button>\n                <button className='list-button-white' id={time.id} index={index} onClick={onSave}>\n                        Save\n                </button>\n                <button className='list-button-white' id={time.id} index={index} onClick={onDelete}>\n                        Delete\n                </button>\n        </div>\n        </div>\n    )\n}\n\nexport default TimeNameEdit;","import React from 'react';\nimport styles from './TimeName.module.css';\n\n/**\n *------------------------------------------------------- \n * Component to create the default version of time names\n *------------------------------------------------------- \n * \n * The default version only displays the name and \n *  view button in the saved availability section\n * \n *------------------------------------------------------- \n * @param {array} time 'saved' array (in store)\n * @param onView method to change state when viewing \n * @param onEdit method to change state when editting name\n * @param {*} index index of name in saved availability section\n */\n\nconst TimeNameNormal = ({time, onView, onEdit, index}) => {\n    return(\n        <div className={styles.slot_container}>\n            <h6 className={styles.time_name} id={time.id} index={index} onDoubleClick={onEdit}>\n                { time.name }\n            </h6>\n            <button className='list-button-green' id={time.id} index={index} onClick={onView}>\n                {time.text}\n            </button>\n        </div>\n    )\n}\n\nexport default TimeNameNormal;","import React, { Component} from 'react';\nimport { connect } from 'react-redux';\nimport TimeNameEdit from './TimeNameEdit';\nimport TimeNameNormal from './TimeNameNormal';\nimport { editName, saveName, view, del } from '../../store/actions/timeActions';\nimport styles from './SavedTimes.module.css';\n\n/**\n *------------------------------------------------------- \n * Component to create the saved availability section\n *------------------------------------------------------- \n */\n\nclass SavedTimes extends Component{\n    state = {\n        tempName: ''\n    }\n\n    /**\n     * --- Called when user changes the name of a saved time preference\n    */\n    handleNameChange = (e) => {\n        this.setState({\n            tempName: e.target.value\n        })\n    }\n\n    /**\n     * --- Called when user clicks to edit the name of a saved time preference\n    */\n    handleNameEdit = (e) => {\n        this.props.editName(e.target.id, e.target.getAttribute('index'))\n    }\n\n    /**\n     * --- Called when user saves a new name\n    */\n    handleNameSave = (e) => {\n\n    // *** need to prevent empty name here\n\n        e.preventDefault()\n        this.props.saveName(e.target.id, e.target.getAttribute('index'), this.state.tempName)\n    }\n\n    /**\n     * --- Called when user deletes a saved time preference\n    */\n    handleDelete = (e) => {\n        this.props.del(e.target.id, e.target.getAttribute('index'))\n    }\n\n    /**\n     * --- Called when user clicks to view a saved time preference\n    */\n    handleView = (e) => {\n        this.props.view(e.target.id, e.target.getAttribute('index'))\n    }\n\n    /**\n     * normalOrEditBox\n     * \n     * @desc Grabs component based on state of name (user is editting or not editting)\n     * @param {boolean} isEdit whether user is editing a name\n     * @param {array} time 'saved' array (in store)\n     * @param {*} index index of name in saved availability section\n    */\n    normalOrEditBox = (isEdit, time, index) => {\n        let box = \n            isEdit ? (\n                <TimeNameEdit \n                    time={time} \n                    onView={this.handleView} \n                    onChange={this.handleNameChange}\n                    onEdit={this.handleNameEdit} \n                    onSave={this.handleNameSave} \n                    onDelete={this.handleDelete} \n                    index={index} \n                />\n            ) : (\n                <TimeNameNormal \n                    time={time} \n                    onView={this.handleView} \n                    onEdit={this.handleNameEdit}\n                    index={index} \n                />\n            )\n        return(box)\n    }\n\n    render(){\n        const { storeSavedTimes } = this.props;\n\n        // show names of saved preferences if user has any\n        const savedList = \n            storeSavedTimes.length ? (\n                storeSavedTimes.map((time, index) => {\n                    return(\n                        <li className={styles.time_li} key={index}>\n                            {this.normalOrEditBox(time.isEdit, time, index)}\n                        </li>\n                    );\n                })\n            ) : (\n            // if user has no saved preferences\n                <div className='center'> You Have No Saved Time Preferences</div>\n            )\n        return(\n            <ul className={styles.time_ul}>\n                { savedList }\n            </ul>\n        );\n    }\n}\n\n/**\n * mapStateToProps\n * \n * @description maps state from store to props\n * @param {*} state \n * @param {*} ownProps \n */\nconst mapStateToProps = (state, ownProps) => {\n    return{\n        storeSavedTimes: state.time.saved\n    }\n}\n\n/**\n * mapDispatchToProps\n * \n * @description maps dispatch to props to allow component to send an action\n * @param {*} dispatch \n */\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        editName: (id, index) => { dispatch(editName(id, index)) },\n        saveName: (id, index, name) => { dispatch(saveName(id, index, name)) },\n        view: (id, index) => { dispatch(view(id, index)) },\n        del: (id, index) => { dispatch(del(id, index)) }\n    }\n}\n\n// 'connect' allows component to access the state from the store\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SavedTimes);","/**\n * editName\n * \n * @desc Edit the time preference name\n * @param {*} id  identifier in 'saved' array in timeReducer\n * @param {*} index index in 'saved' array in timeReducer\n */\nexport const editName = (id, index) => {\n    return{\n        type: 'TIME_NAME_EDIT',\n        id: id,\n        index: index\n    }\n}\n\n/**\n * saveName\n * \n * @desc Save the name of the time preference\n * @param {*} id identifier in 'saved' array in timeReducer\n * @param {*} index index in 'saved' array in timeReducer\n * @param {*} name new name for time preference\n */\nexport const saveName = (id, index, name) => {\n    return{\n        type: 'TIME_NAME_SAVE',\n        id: id,\n        index: index,\n        name: name\n    }\n}\n\n/**\n * changeAvailable\n * \n * @desc Change selected time cell\n * @param {*} row_id index in 'availability' array in timeReducer\n * @param {*} col_id index in 'available' array in 'availability in timeReducer\n */\nexport const changeAvailable = (row_id, col_id) => {\n    return{\n        type: 'CHANGE AVAILABILITY',\n        row_id: row_id,\n        col_id: col_id\n    }\n};\n\n/**\n * view\n * \n * @desc View a saved time preference\n * @param {*} id identifier in 'saved' array in timeReducer\n * @param {*} index index in 'saved' array in timeReducer\n */\nexport const view = (id, index) => {\n\n    // *** need to make async call to database here to save\n    // *** need to make async call to database here to save\n\n    // *** need to get new table from database\n    // *** need to get new table from database\n\n    return{\n        type: 'TIME_VIEW',\n        id: id,\n        index: index\n    }\n}\n\n/**\n * save\n * \n * @desc Save a new time preference\n * @param {*} name new name for new time preference\n */\nexport const save = (name) => {\n\n    // *** need to make async call to database here to save\n    // *** need to make async call to database here to save\n\n    // *** need to get new id from database\n    // *** need to get new id from database\n\n    return{\n        type: 'TIME_SAVE',\n        name: name\n    }\n}\n\n/**\n * del\n * \n * @desc Delete a time preference\n * @param {*} id identifer in 'saved' array in timeReducer\n * @param {*} index index in 'saved' array in timeReducer\n */\nexport const del = (id, index) => {\n    return{\n        type: 'TIME_DELETE',\n        id: id,\n        index: index\n    }\n}\n\n/**\n * clear\n * \n * @desc Clear the time table\n */\nexport const clear = () => {\n    return{\n        type: 'TIME_CLEAR'\n    }\n}","import React from 'react';\nimport styles from './TimeTable.module.css';\n\n/**\n *------------------------------------------------------- \n * Component to create the time selection table header\n *------------------------------------------------------- \n */\n\nconst TableHeader = () => {\n    const days = ['Sun.', 'Mon.', 'Tues.', 'Wed.', \n                  'Thurs.', 'Fri.', 'Sat.'].map(day => {\n        return(\n            <th key={day}> \n                <div className={styles.day_name}>{day}</div> \n            </th>\n        );\n    })\n    return(\n        <tr className={styles.table_tr}>\n            <th></th>\n            {days}\n        </tr>\n    );\n}\n\nexport default TableHeader;","import React, { Component} from 'react';\nimport styles from './TimeTable.module.css';\n\n/**\n *------------------------------------------------------- \n * Component to create the time selection table body\n *------------------------------------------------------- \n */\n\nclass TableBody extends Component{\n\n    /**\n     * fillRow\n     * \n     * @desc Fills in the cells with the color corresponding \n     *          to the sate of the cell (selected or not selected)\n     * @param {array} row an array of booleans\n     * @param  {*} row_index the index of the row\n     */\n    fillRow = (row, row_index) => {\n        return(\n            row.available.map((selected, index) => {\n                return(\n                    selected ? (\n                        // fill green if selected\n                        <td key={index} row_id={row_index} col_id={index} \n                            bgcolor='#5ea181' className={styles.table_td} \n                            onClick={this.props.handleSelect}></td>\n                    ) : (\n                        // fill white if not selected\n                        <td key={index} row_id={row_index} col_id={index} \n                            className={styles.table_td} \n                            onClick={this.props.handleSelect}></td>\n                    )\n                )\n            })\n        )\n    }\n\n    render(){\n        const { table } = this.props;\n        const times = table.map((time, index) => {\n            return(\n                <tr className={styles.table_tr} key={index}>\n                    <td className={styles.time_slot}>\n                        {time.time}\n                    </td>\n                    {this.fillRow(time, index)}\n                </tr>\n            )\n        })\n\n        return(\n            <tbody>\n                {times}\n            </tbody>\n        );\n    }\n}\n\nexport default TableBody;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport TableHeader from './TableHeader';\nimport TableBody from './TableBody';\nimport { changeAvailable } from '../../store/actions/timeActions';\nimport styles from './TimeTable.module.css';\n\n/**\n *------------------------------------------------------- \n * Component to create the time selection table\n *------------------------------------------------------- \n */\n\nclass TimeTable extends Component{\n\n    /**\n     * --- Called when user clicks on a time cell\n    */\n    handleSelect = (e) => {\n        const row_id = e.target.getAttribute('row_id')\n        const col_id = e.target.getAttribute('col_id')\n        this.props.changeAvailable(row_id, col_id);\n    }\n\n    render(){\n        const { storeTimeTable } = this.props;\n        return(\n            <table className={styles.time_table}>\n                <thead>\n                    <TableHeader />\n                </thead>\n                <TableBody \n                    table={storeTimeTable} \n                    handleSelect={this.handleSelect}/>\n            </table>\n        );\n    }\n}\n\n\n/**\n * mapStateToProps\n * \n * @description maps state from store to props\n * @param {*} state \n * @param {*} ownProps \n */\nconst mapStateToProps = (state, ownProps) => {\n    return{\n        storeTimeTable: state.time.table,\n    }\n}\n\n\n/**\n * @description maps dispatch to props to allow component to send an action\n * @param {*} dispatch \n */\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        changeAvailable: (isViewing, row_id, col_id) => { \n            dispatch(changeAvailable(isViewing, row_id, col_id)) }        \n    }\n}\n\n// 'connect' allows component to access the state from the store\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeTable);","import React from 'react';\nimport Popup from 'reactjs-popup';\nimport styles from './TimePopup.module.css';\n\n/**\n *------------------------------------------------------- \n * Component to create a popup \n *------------------------------------------------------- \n * @param trigger button that triggeres popup\n * @param onSave method to handle save\n * @param onChange method to change text as user types\n */\n\nconst TimePopup = ({trigger, onSave, onChange}) => {\n    return(\n        <Popup trigger={trigger} \n                modal contentStyle={{maxWidth:'500px', width:'90%'}} closeOnDocumentClick={false}>\n            {close => (\n                <div>\n                    <h5 align='left'>Title</h5>\n                    <form onSubmit={(e) => {onSave(e, close)}}>\n                        <input type='text' placeholder='New Name' autoFocus={true} onChange={onChange}/>\n                        <button align='right' className={styles.button_popup}>ok</button>\n                    </form>\n                </div>\n            )}\n        </Popup>\n    )\n}\n\nexport default TimePopup;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SavedTimes from './SavedTimes';\nimport TimeTable from './TimeTable';\nimport TimePopup from './TimePopup';\nimport { save, clear}  from '../../store/actions/timeActions';\nimport styles from './Time.module.css';\n\n/**\n *------------------------------------------------------- \n * Main Time Availability Component\n *------------------------------------------------------- \n * \n * Contians both the time selection table and \n *  the saved availability section \n * \n *------------------------------------------------------- \n */\n\nclass Time extends Component{\n  state = {\n    name: ''\n  }\n\n  /**\n   * --- Called when user clicks the clear button\n  */\n  handleClear = () => {\n    this.props.clear();\n  }\n\n  /**\n   * --- Called when user inputs a new name in the popup\n  */\n  handleChange = (e) => {\n    this.setState({\n      name: e.target.value\n    })\n  }\n\n  /**\n   * handleSave\n   * \n   * @desc Called when user clicks the save button\n   * @param close method that closes popup\n  */\n  handleSave = (e, close) => {\n\n    // *** need to prevent empty name here\n\n    e.preventDefault();\n    this.props.save(this.state.name);    \n    close()\n  }\n\n  /**\n   * getButton\n   * \n   * @desc Shows or hides buttons depending on state of page\n   * @param {boolean} isViewing is user viewing a time preference\n   * @param {string} type the type of button needed\n  */\n  getButton = (isViewing, type) => {\n      if(isViewing && type === 'create'){\n\n        // show 'create' button if user is viewing a saved time preference, else hide it\n        return(\n          <button className='green_button' onClick={this.handleClear}>\n            Create New\n          </button>\n        )\n      }else if(type === 'left'){\n\n          // show 'clear' button if user is not viewing a saved time preference\n          return(\n            <button className='white_button' onClick={this.handleClear}> Clear </button>\n          )\n      }else if(type === 'right'){\n\n        // show 'save' button if user is not viewing a saved time preference\n        return(\n          <TimePopup \n            trigger={<button className='green_button'> Save </button>}\n            onSave={this.handleSave}\n            onChange={this.handleChange}\n          />\n        )\n      }else{\n        return(null)\n      }\n  }\n\n\n  render(){\n    const { storeIsViewing } = this.props;\n\n    return(\n      <div className={styles.main_container}>\n\n        {/* // Saved Availability Section  */}\n\n        <div className={styles.saved_container}>\n          <div className={styles.saved_content}>\n            <h2 align='center' className='subtitle'>Saved Availability</h2>\n            <div className={styles.name_list}>\n              <SavedTimes />\n            </div>\n          </div>\n          <div align='center' style={{height: '3vw'}}>\n            {this.getButton(storeIsViewing, 'create')}\n          </div>\n        </div>\n\n        {/* // Time Selection Table Section */}\n\n        <div className={styles.selection_container}>\n          <div className={styles.selection_content}>\n            <h2 align='center' className='subtitle'>Select When You Are Available</h2>\n            <div align='center' style={{paddingTop: '1%'}} className='description'> \n              Click all the boxes that correspond to the hours and days that you do <br/> \n              not want to have class. Any white boxes will be considered free.\n            </div>\n            <div className={styles.table_container}>\n              <TimeTable />\n            </div>\n          </div>\n          <div className={styles.button_container}>\n            {this.getButton(storeIsViewing, 'left')}\n            {this.getButton(storeIsViewing, 'right')}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n/**\n * mapStateToProps\n * \n * @description maps state from store to props\n * @param {*} state \n * @param {*} ownProps \n */\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    storeIsViewing: state.time.isViewing\n  }\n}\n\n/**\n * mapDispatchToProps\n * \n * @description maps dispatch to props to allow component to send an action\n * @param {*} dispatch \n */\nconst mapDispatchToProps = (dispatch) => {\n  return{\n    save: (name) => { dispatch(save(name)) },\n    clear: () => { dispatch(clear()) }\n  }\n}\n\n// 'connect' allows component to access the state from the store\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Time);\n\n","import React, { Component } from \"react\";\nimport Curriculum from \"../CourseHistory/Curriculum\";\nimport Flowchart from \"../Flowchart/Flowchart\";\nimport styles from \"./History.module.css\";\nimport Popup from \"reactjs-popup\";\n\n/**\n *-------------------------------------------------------\n * Main Desired Curriculum Component\n *-------------------------------------------------------\n *\n * Contains both the curriculum view and flowchart\n *  for classes a student wants to take\n *\n *-------------------------------------------------------\n */\n\nclass DesiredCourse extends Component {\n  state = {\n    viewCurriculum: true\n  };\n\n  /*\n   * --- Generate either the curriculum or the flowchart\n   */\n  getView = () => {\n    let view = this.state.viewCurriculum ? (\n      <div className={styles.main_container}>\n        <Curriculum type={\"Desired\"} />\n      </div>\n    ) : (\n      <div className={styles.main_container}>\n        <h2 className=\"subtitle\" align=\"center\">\n          Desired Classes\n        </h2>\n        <Flowchart />\n      </div>\n    );\n    return view;\n  };\n\n  /*\n   * --- Change the button depending on page\n   */\n  getButtonText = () => {\n    let text = this.state.viewCurriculum ? \"Flowchart\" : \"Curriculum\";\n    return text;\n  };\n\n  /*\n   * --- Switch to either the curriculum or the flowchart\n   */\n  handleSwitch = () => {\n    this.setState({\n      viewCurriculum: !this.state.viewCurriculum\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.getView()}\n        <div className={styles.button_container}>\n          <Popup\n            trigger={\n              <button\n                className=\"white_button\"\n                style={{ marginRight: \"0px\" }}\n                onClick={this.handleSave}\n              >\n                Save\n              </button>\n            }\n            modal\n            contentStyle={{ maxWidth: \"459px\", width: \"90%\" }}\n            closeOnDocumentClick\n            overlayStyle={{ width: \"100%\" }}\n          >\n            {close => (\n              <div className={styles.modal}>\n                <div className={styles.header}>Confirm Courses</div>\n                <button onClick={close} className=\"white_button\">\n                  Cancel\n                </button>\n                <button onClick={close} className=\"green_button\">\n                  Save\n                </button>\n              </div>\n            )}\n          </Popup>\n          <button className=\"green_button\" onClick={this.handleSwitch}>\n            {this.getButtonText()}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DesiredCourse;\n","import React from 'react';\nimport styles from './Schedule.module.css';\n\n/**\n *------------------------------------------------------- \n * Component that creates the individual schedule header \n *------------------------------------------------------- \n * @param {array} descriptors 'descriptors' array (in store)\n */\n\nconst ScheduleHeader = ({descriptors}) => {\n    const headers = descriptors.map(header => {\n        return(\n            <th className={styles.sched_cell} key={header}>{header}</th>\n        );\n    })\n    return(\n        <tr className={styles.sched_row}>\n            {headers}\n        </tr>\n    )\n}\n\nexport default ScheduleHeader;\n","import React, { Component } from 'react';\nimport styles from './Schedule.module.css';\n\n/**\n *------------------------------------------------------- \n * Component that creates the individual schedule body\n *------------------------------------------------------- \n */\n\nclass ScheduleBody extends Component{\n\n    /**\n     * fillRow\n     * \n     * @desc Fills the rows of the schedule table with the courses in that schedule\n     * @param {array} course contains all the information for one course\n    */\n    fillRow = (course) => {\n        let values = []\n        Object.keys(course).forEach((element, index)=>{\n            if(course.hasOwnProperty(element)){\n                values.push(\n                    <td key={index} className={styles.sched_cell}>{ course[element] }</td>\n                )     \n            }\n        })\n        return(values)\n    }\n\n    render(){\n        const { classes } = this.props;\n\n        // creates the table\n        const table = classes.map((course, index) => {\n            return(\n                <tr key={index}>\n                    {this.fillRow(course)}\n                </tr>\n            )\n        })\n        return(\n            <tbody>\n                {table}\n            </tbody>\n        );\n    }\n}\n\nexport default ScheduleBody;","import React, { Component } from 'react';\nimport ScheduleHeader from './ScheduleHeader';\nimport ScheduleBody from './ScheduleBody';\nimport styles from './Schedule.module.css'\n\n/**\n *------------------------------------------------------- \n * Main component that creates an individual schedule\n *------------------------------------------------------- \n */\n\nclass Schedule extends Component{\n    render(){\n        const { descriptors, schedule } = this.props;\n        return(\n            <table className={styles.sched_table}>\n                <thead className={styles.sched_header}>\n                    <ScheduleHeader descriptors={descriptors} />\n                </thead>\n                <ScheduleBody classes={schedule.classes}/>\n            </table>\n        );\n    }    \n}\n\nexport default Schedule;","import React, { Component } from 'react';\nimport Map from '../../Map2.png' \n import TableHeader from '../TimeAvailability/TableHeader';\nimport TableBody from '../TimeAvailability/TableBody';\nimport PinchZoomPan from 'react-responsive-pinch-zoom-pan';\nimport styles from './SchedExpand.module.css';\n\n/**\n *------------------------------------------------------- \n * Component that creates the expanded portion of the \n *  schedule, which contains the map and time table view\n *------------------------------------------------------- \n */\n\nclass ScheduleExpand extends Component{\n\n    /**\n     * --- disable scroll when interacting with map\n     */\n    disableScroll = () => {\n        var list = document.getElementsByClassName('interactive');\n        list[0].classList.remove('scrollable')\n        list[0].classList.add('nonscrollable')\n    }\n\n    /**\n     * --- enable scroll when not interacting with map\n     */\n    enableScroll = () => {\n        var list = document.getElementsByClassName('interactive');\n        list[0].classList.remove('nonscrollable')\n        list[0].classList.add('scrollable')\n    }\n\n    render(){\n        const { schedule } = this.props;\n        return(\n            <div className={styles.layout}>\n                <div className={styles.image} onMouseOver={this.disableScroll} onMouseLeave={this.enableScroll}>\n                    <PinchZoomPan \n                        position='center' \n                        initialScale={2.5} \n                        maxScale={5} \n                        zoomButtons={false} >\n                            <img src={Map} alt='Campus Map' width='100%'/>\n                    </PinchZoomPan>\n                </div>\n                <table className={styles.smallTable} align='center'>\n                    <thead>\n                        <TableHeader  />\n                    </thead>\n                    <TableBody table={schedule.times} />\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default ScheduleExpand;","/**\n * view\n * \n * @desc View a schedule \n * @param {*} id identifier in 'viewing' array in scheduleReducer\n * @param {*} index index in 'viewing' array in scheduleReducer\n */\nexport const view = (id, index) => {\n    return{\n        type: 'SCHEDULE_VIEW',\n        id: id,\n        index: index\n    }\n}\n\n/**\n * select\n * \n * @desc Select a schedule\n * @param {*} id identifier in 'selected' array in scheduleReducer\n * @param {*} index index in 'selected' array in scheduleReducer\n */\nexport const select = (id, index) => {\n    return{\n        type: 'SCHEDULE_SELECT',\n        id: id,\n        index: index,\n    }\n}\n\n/**\n * deselect\n * \n * @desc Deselect a schedule \n * @param {*} id identifier in 'selected' array in scheduleReducer\n * @param {*} index index in 'selected' array in scheduleReducer\n */\nexport const deselect = (id, index) => {\n    return{\n        type: 'SCHEDULE_DESELECT',\n        id: id,\n        index: index\n    }\n}\n\n/**\n * filter\n * \n * @desc Filter a list of schedules\n */\nexport const filter = () => {\n    return{\n        type: 'SCHEDULE_FILTER'\n    }\n}\n\n/**\n * sort\n * \n * @desc Sort a list of schedules\n */\nexport const sort = () => {\n    return{\n        type: 'SCHEDULE_SORT'\n    }\n}\n\n/**\n * save\n * \n * @desc Save a set of schedules\n */\nexport const save = () => {\n\n    // *** need to make async call to database here to save\n    // *** need to make async call to database here to save\n\n    return{\n        type: 'SCHEDULE_SAVE'\n    }\n}\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Schedule from './Schedule';\nimport ScheduleExpand from './ScheduleExpand';\nimport { view, select, deselect } from '../../store/actions/scheduleActions';\nimport styles from './SchedList.module.css'\n\n/**\n *------------------------------------------------------- \n * Component to create the list of schedules\n *------------------------------------------------------- \n */\n\nclass ScheduleList extends Component{\n\n    /**\n     * --- Called when user views a schedule\n    */\n    handleView = (e) => {\n        this.props.view(e.target.id, e.target.getAttribute('index'))\n    }\n\n    /**\n     * --- Called when user selects a schedule\n    */\n    handleSelect = (e) => {\n        if(e.target.checked){\n            this.props.select(e.target.id, e.target.getAttribute('index'))\n        }else{\n            this.props.deselect(e.target.id, e.target.getAttribute('index'))\n        }\n    }\n\n    /**\n     * expandSchedule\n     * \n     * @desc Expand schedule if user clicks on view\n     * @param schedule the schedule that was selected\n     * @param {string} viewing 'viewing' array (in store)\n     * @param {*} index index of schedule in 'viewing' array (in store)\n    */\n    expandSchedule = (schedule, viewing, index) => {\n        if(viewing[index].text === 'View'){\n            return(null)\n        }else{\n            return(<ScheduleExpand schedule={schedule} />)\n        }\n    }\n\n    /**\n     * showCheckBox\n     * \n     * @desc Show checkbox if selecting potential schedules, \n     *          not when viewing saved schedules\n     * @param {boolean} addCheckBoxes add checkbox in potential schedules page only\n     * @param {*} sched_id id of schedule\n     * @param {*} index index of schedule in 'schedules' array (in store)\n    */\n    showCheckBox = (addCheckBoxes, schedule_id, index) => {\n        return(\n            addCheckBoxes ? (\n                <label className={styles.check_box}>\n                    <input type='checkbox' className={styles.box_green} \n                            id={schedule_id} index={index} onClick={this.handleSelect}/>\n                    <span></span>\n                </label>\n            ) : (null)\n        )\n    }\n\n    /**\n     * listSchedules\n     * \n     * @desc Lists all the shedules in the store\n     * @param {array} descriptors 'descriptors' array (in store)\n     * @param {array} schedules 'schedules' array (in store)\n     * @param {array} viewing 'viewing' array (in store)\n     * @param {boolean} addCheckboxes add checkbox in potential schedules page only\n     * \n    */\n    listSchedules = (descriptors, schedules, viewing, addCheckBoxes) => {\n        const list = \n        schedules.map((schedule, index) => {\n            return(\n                <li className={styles.li} key={index}>\n                    <div className={styles.sched_entry}>\n                        <div className={styles.sched_name}>\n                            { schedule.name }\n                        </div>\n                        <div className={styles.check_container}>\n                            <button className={`list-button-green ${styles.modified}`} id={schedule.id} \n                                    index={index} onClick={this.handleView}>\n                                { viewing[index].text }\n                            </button>\n                            { this.showCheckBox(addCheckBoxes, schedule.id, index) }\n                        </div>\n                    </div>\n                    <Schedule descriptors={descriptors} schedule={schedule}/> \n                    { this.expandSchedule(schedule, viewing, index) }\n                </li>\n            );\n        })\n        return(list);\n    }\n\n    render(){\n        const { storeDescriptors, schedules, storeViewing, addCheckBoxes, emptyText } = this.props;\n\n        const schedulesList = \n            schedules.length ? (\n\n                // Show schedules if there are any\n                <ul className={`${styles.ul} interactive scrollable`}>\n                   {this.listSchedules(storeDescriptors, schedules, storeViewing, addCheckBoxes)}\n                    <div style={{marginBottom:'2%'}}></div>\n                </ul>\n            ) : (\n\n                // Show text if there are no schedules\n                <div className={styles.empty}>\n                    <h6 align='center'>{ emptyText }</h6>\n                </div>\n            )\n\n        return(\n            <div>\n                { schedulesList }\n                <div></div>\n            </div>\n        )\n    }\n}\n\n\n/**\n * mapStateToProps\n * \n * @description mpas state from store to props\n * @param {*} state \n * @param {*} ownProps \n */\nconst mapStateToProps = (state, ownProps) => {\n    return{\n        storeDescriptors: state.schedule.descriptors,\n        storeViewing: state.schedule.viewing,\n    }\n}\n\n/**\n * mapDispatchToProps\n * \n * @description maps dispatch to props to allow component to send an action\n * @param {*} dispatch \n */\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        view: (id, index) => { dispatch(view(id, index)) },\n        select: (id, index) => { dispatch(select(id, index)) },\n        deselect: (id, index) => { dispatch(deselect(id, index)) }\n    }\n}\n\n// 'connect' allows component to access the state from the store\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScheduleList);","import React, { Component } from 'react';\nimport styles from './Dropdown.module.css';\n\n/**\n *------------------------------------------------------- \n * Component that creates the dropdown menu\n *------------------------------------------------------- \n */\n\nclass Dropdown extends Component {\n    state = {\n        isOpen: false\n    }\n\n    /** \n     * --- Called when user clicks outside  dropdown menu\n    */\n    handleClickOutside = () => {\n        this.setState({\n            isOpen: false\n        })\n    } \n\n    /** \n     * --- Called when user clicks on a dropdown menu\n    */\n    toggleList = (e) => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        })\n    }\n\n    render(){\n        const { name, list } = this.props;\n\n        // changes angle icon when dropdown is clicked\n        const angleIcon = \n            this.state.isOpen ? (\n                    <i className='small material-icons right'>expand_less</i>\n            ) : (\n                    <i className='small material-icons right'>expand_more</i>\n            )\n\n        // create dropdown elements\n        const elements =\n            list.map((element, index) => {\n                return(\n                    <div key={index} style={{borderBottom:'solid 1px white'}}>\n                        <li style={{marginLeft:'20%'}} key={index}>{element.name}</li>\n                    </div>\n                )\n            })\n\n        // create dropdown menu\n        const listelements = \n            this.state.isOpen ? (\n                <ul className={styles.dropdown_content}>{elements}</ul>\n            ) : (null)\n\n        return(\n            <div className={styles.dropdown}>\n                <div className={styles.drop} onClick={this.toggleList}>\n                    {name}\n                    {angleIcon}\n                </div>\n                <div align='center'>\n                        {listelements} \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Dropdown;","import React from 'react';\nimport Dropdown from './Dropdown';\nimport styles from './SortFilter.module.css';\n\n/**\n *------------------------------------------------------- \n * Component creates the sort and filter dropdowns\n *------------------------------------------------------- \n * @param {array} sorters array of sorters (names)\n * @param {array} filters array of filters (names)\n */\n\n\nconst SortFilter = ({ sorters, filters }) => {\n    return(\n        <div className={styles.sf_container}>\n            <h2 className='subtitle' align='center'>Sorting + Filter</h2>\n            <div className={styles.content_container}>\n                <Dropdown name='Sort' list={sorters}/>\n                <Dropdown name='Filter' list={filters}/>\n                <div style={{marginTop: '5%'}} align='center' className='description'>\n                    * You can sort by earliest class start, <br />\n                    latest class end, amount of hours <br />\n                    spent in class, and more.\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SortFilter;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ScheduleList from './ScheduleList';\nimport SortFilter from './SortFilter';\nimport { save } from '../../store/actions/scheduleActions';\nimport  styles from './MainSched.module.css';\n\n/**\n *------------------------------------------------------- \n * Main Potential Schedules Component\n *------------------------------------------------------- \n * \n * Contains both the list of potetial schedules and\n *  the sort/filter section\n * \n *------------------------------------------------------- \n */\n\nclass PotentialSchedules extends Component{\n\n    /**\n     * --- Called when user saves a schedule\n    */\n    handleSave = () => {\n        this.props.save()\n        this.props.history.push('/SavedSchedules')    \n    }\n\n    render(){\n        const { storeSchedules, storeSorters, storeFilters } = this.props;\n        return(\n            <div className={styles.main_container}>\n\n                {/* // Schedule Section */}\n\n                <div className={styles.list_container}>\n                    <h2 className='subtitle' align='center'>Potential Schedules</h2>\n                    <ScheduleList  \n                        schedules={storeSchedules} \n                        addCheckBoxes={true} \n                        emptyText={'No Schedules Meet Your Criteria'} \n                    />\n                </div> \n\n                {/* // Filter/Sort Section */}\n\n                <div className={styles.filter_container}>\n                    <SortFilter sorters={storeSorters} filters={storeFilters} />\n                    <button className='green_button' onClick={this.handleSave}>Save Shedule(s)</button>\n                </div>\n            </div>\n        )\n    }\n}\n\n/**\n * mapStateToProps \n * \n * @description maps state from store to props\n * @param {*} state \n * @param {*} ownProps \n */\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        storeSchedules: state.schedule.schedules,\n        storeSorters: state.schedule.sorters,\n        storeFilters: state.schedule.filters\n    }\n}\n\n/**\n * mapDispatchToProps\n * \n * @description maps dispatch to props to allow component to send an action\n * @param {*} dispatch \n */\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        save: () => { dispatch(save()) }\n    }\n}\n\n// 'connect' allows component to access the state from the store\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PotentialSchedules);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { view } from '../../store/actions/scheduleActions';\nimport ScheduleList from './ScheduleList';\nimport SortFilter from './SortFilter';\nimport  styles from './MainSched.module.css';\n\n/**\n *------------------------------------------------------- \n * Main Saved Schedules Component\n *------------------------------------------------------- \n * \n * Contains both the list of saved schedules and \n *  the sorter/filter section\n * \n *------------------------------------------------------- \n */\n\nclass SavedSchedules extends Component{\n\n    render(){\n        const { storeSavedSchedules, storeSorters, storeFilters } = this.props;\n        return(\n            <div className={styles.main_container}>\n\n                    {/* // Schedule Section */}\n\n                <div className={styles.list_container}>\n                    <h2 className='subtitle' align='center'>Saved Schedules</h2>\n                    <ScheduleList  \n                        schedules={storeSavedSchedules} \n                        addCheckBoxes={false}\n                        emptyText={'No Saved Schedules'}     \n                    />\n                </div>\n\n                    {/* // Sort & Filter Section */}\n\n                <div className={styles.filter_container}>\n                    <SortFilter sorters={storeSorters} filters={storeFilters}/>\n                </div>\n            </div>\n        )\n    }\n}\n\n/**\n * mapStateToProps\n * \n * @description maps state from store to props \n * @param {*} state \n * @param {*} onwProps \n */\n\nconst mapStateToProps = (state, onwProps) => {\n    return {\n        storeSavedSchedules: state.schedule.savedSchedules,\n        storeSorters: state.schedule.sorters,\n        storeFilters: state.schedule.filters\n    }\n}\n\n/**\n * mapDispatchToProps \n * \n * @description maps dispatch to props to allow component to send an action\n * @param {*} dispatch \n */\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        view: (id, index) => { dispatch(view(id, index)) },\n    }\n}\n\n// 'connect' allows comopnent to access the state from the store\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SavedSchedules);","import React from 'react';\nimport styles from './About.module.css';\n\nconst About = (props) => {\n    return(\n        <div className={styles.about_container}>\n            <div className={styles.title_offset}>\n                <h1 className='title'>Schedulsaur</h1>\n                <h5 className='title-description'>a friendly schedule finder</h5>\n            </div>\n            <div className={styles.info_container}>\n                <div className={styles.text_container}>\n                    <h6 className={styles.text}>\n                        schedulsaur is a scheduling app designed by <br/>\n                        cal poly students for cal poly students <br/>\n                    </h6>\n                </div>\n                <div className={styles.text_container}>\n                    <h6 className={styles.text}>\n                        update you time availability, generate schedules <br/>\n                        view degree progress and more <br/>\n                    </h6>\n                </div>\n                <div className={styles.text_container}>\n                    <h6 className={styles.text}>\n                        happy scheduling {'<3'} <br/>\n                        --team bulbasaur <br/>\n                    </h6>\n                </div>\n                <div className={styles.button_container}>\n                    <button className='green_button' onClick={props.history.goBack}>Back</button>\n                </div>\n            </div>\n            <h6 className={styles.version}>version 0.1.0</h6>\n            <footer className='footer'></footer>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\n\nconst Help = () => {\n    return(\n        <div style={{marginTop:'8%'}} align='center'>\n            <h2 className='subtitle'>Help</h2>\n        </div>\n    );\n}\n\nexport default Help;","import React, { Component } from \"react\";\nimport TopBar from \"./components/Nav/TopBar\";\nimport NavBar from \"./components/Nav/NavBar\";\nimport Login from \"./components/Authentication/Login\";\nimport Signup from \"./components/Authentication/Signup\";\nimport DashBoard from \"./components/Dashboard/DashBoard\";\nimport CourseHistory from \"./components/History/CourseHistory\";\nimport Time from \"./components/TimeAvailability/Time\";\nimport DesiredCourse from \"./components/History/DesiredCourse\";\nimport PotentialSchedules from \"./components/Schedules/PotentialSchedules\";\nimport SavedSchedules from \"./components/Schedules/SavedSchedules\";\nimport About from \"./components/Other/About\";\nimport Help from \"./components/Other/Help\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\n/**\n * Main App Class\n *\n * Router is used to navigate between pages\n * Switch allows url to match only one route at a time\n */\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"all\">\n          <Switch>\n            {/* // Pages Outside Main Application */}\n\n            <Route exact path=\"/\" component={Login} />\n            <Route path=\"/Signup\" component={Signup} />\n            <Route path=\"/About\" component={About} />\n\n            {/* // Pages Inside Main Application */}\n\n            <div className=\"app-body\">\n              {\" \"}\n              {/* // Format for entire page */}\n              <TopBar />\n              <NavBar />\n              <div className=\"main\">\n                {\" \"}\n                {/* // Format for body of app */}\n                <Route path=\"/DashBoard\" component={DashBoard} />\n                <Route path=\"/CourseHistory\" component={CourseHistory} />\n                <Route path=\"/TimeAvailability\" component={Time} />\n                <Route path=\"/DesiredCourses\" component={DesiredCourse} />\n                <Route path=\"/CreateSchedules\" component={PotentialSchedules} />\n                <Route path=\"/SavedSchedules\" component={SavedSchedules} />\n                <Route path=\"/Help\" component={Help} />\n              </div>\n            </div>\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n\n    /**\n     * student\n     * \n     * @desc Contains information about a student\n     * @param {String} id student identifier\n     * @param {array} info student information\n     * @param {String} major_percent percent completion of major courses\n     * @param {String} support_percent percent completion of support courses\n     * @param {String} ge_percent percent completion of ge courses\n     * @param {boolean} isEdit if user is editing their info\n     * @param {String} editButton type of button (depends on isEdit)\n     * @param {array} info_types  array of type of information to be presented\n     */\n\n    id: '1',\n    info: [\n        {type: 'Name', text: 'John Doe'},\n        {type: 'Major', text: 'Software Engineering'},\n        {type: 'Catalog Year', text: '2017-2019'},\n        {type: 'Expected Graduation', text: 'Spring 2020'},\n        {type: 'Units This Quarter', text: '16'},\n        {type: 'Units Per Quarter', text: '14.5'}\n    ],\n    major_percent: '50',\n    support_percent: '75',\n    ge_percent: '10',\n    isEdit: false,\n    editButton: 'Edit Profile',\n}\n\n/**\n * --- Modifies state according to dispatched action\n*/\nconst studentReducer = (state=initState, action=null) => {\n\n    /* // When user saves their personal information */\n    if(action.type === 'STUDENT_SAVE'){\n        let newInfo = [\n            {type: 'Name', text: 'John Doe'},\n            {type: 'Major', text: action.major},\n            {type: 'Catalog Year', text: action.catalog},\n            {type: 'Expected Graduation', text: action.expected},\n            {type: 'Units This Quarter', text: action.units_this},\n            {type: 'Units Per Quarter', text: action.units_per}\n        ]\n        return{\n            ...state,\n            info: newInfo,\n            isEdit: !state.isEdit,\n            editButton: 'Edit Profile'\n        }\n\n    /* // When user edits their personal information */\n    }else if(action.type === 'EDIT_INFO'){\n        const newEditButton = (state.editButton === 'Edit Profile') ? \n            ('Cancel') : ('Edit Profile')\n        return{\n            ...state,\n            isEdit: !state.isEdit,\n            editButton: newEditButton\n        }\n    } else {\n        return state\n    }\n}\n\nexport default studentReducer;\n","const initState = {\n\n    /**\n     * saved\n     *  \n     * @desc Contains names of saved time preferences\n     * @param {String} id time preference identifier\n     * @param {String} name name of saved time preference\n     * @param {String} text indicates whether user is viewing a time preference\n     * @param {Boolean} isEdit indicates wheter user is editing a time preference\n     */\n    saved: [\n        {id: '0', name: 'Winter 2018', text: 'Select', isEdit: false},\n        {id: '1', name: 'Summer Quarter', text: 'Select', isEdit: false},\n        {id: '2', name: 'More Sleep', text: 'Select', isEdit: false},\n        {id: '3', name: 'Morning Only', text: 'Select', isEdit: false},\n        {id: '4', name: 'Chem TA Schedule', text: 'Select', isEdit: false},\n    ],\n\n    /**\n     * availability\n     * \n     * @desc Contains the specific table of times for each saved time preference\n     * @param {String} id time identifier\n     * @param {String} name name of saved time preference\n     * @param {String} time specifies the time of day\n     * @param {Boolean} available whether student is available at the specified time\n     */\n    availability: [\n        {id:'0', time:'07-08 AM', available: [true, true, true, true, true, true, true]},\n        {id:'1', time:'08-09 AM', available: [true, true, true, true, true, true, true]},\n        {id:'2', time:'09-10 AM', available: [false, false, false, false, false, false, false]},\n        {id:'3', time:'10-11 AM', available: [false, false, false, false, false, false, false]},\n        {id:'4', time:'11-12 AM', available: [false, false, false, false, false, false, false]},\n        {id:'5', time:'12-01 PM', available: [false, false, false, false, false, false, false]},\n        {id:'6', time:'01-02 PM', available: [false, false, false, false, false, false, false]},\n        {id:'7', time:'02-03 PM', available: [false, false, false, false, false, false, false]},\n        {id:'8', time:'03-04 PM', available: [false, true, false, true, false, true, false]},\n        {id:'9', time:'04-05 PM', available: [false, true, false, true, false, true, false]},\n        {id:'10', time:'05-06 PM', available: [false, false, true, false, true, false, false]},\n        {id:'11', time:'05-06 PM', available: [false, false, false, false, false, false, false]},\n        {id:'12', time:'06-07 PM', available: [false, false, false, false, false, false, false]},\n        {id:'13', time:'07-08 PM', available: [false, false, false, false, false, false, false]},\n        {id:'14', time:'08-09 PM', available: [true, true, false, true, false, true, true]}\n    ],\n\n    /**\n     * table\n     * \n     * @desc Contains time information entered by user when creating time preferences\n     * @param {String} id time identifier\n     * @param {String} time specifies the time of day\n     * @param {Boolean} available whether student is available at the specified time\n     */\n    table: [\n        {id:'0', time:'07-08 AM', available: [false, false, false, false, false, false, false]},\n        {id:'1', time:'08-09 AM', available: [false, false, false, false, false, false, false]},\n        {id:'2', time:'09-10 AM', available: [false, false, false, false, false, false, false]},\n        {id:'3', time:'10-11 AM', available: [false, false, false, false, false, false, false]},\n        {id:'4', time:'11-12 AM', available: [false, false, false, false, false, false, false]},\n        {id:'5', time:'12-01 PM', available: [false, false, false, false, false, false, false]},\n        {id:'6', time:'01-02 PM', available: [false, false, false, false, false, false, false]},\n        {id:'7', time:'02-03 PM', available: [false, false, false, false, false, false, false]},\n        {id:'8', time:'03-04 PM', available: [false, false, false, false, false, false, false]},\n        {id:'9', time:'04-05 PM', available: [false, false, false, false, false, false, false]},\n        {id:'10', time:'05-06 PM', available: [false, false, false, false, false, false, false]},\n        {id:'11', time:'05-06 PM', available: [false, false, false, false, false, false, false]},\n        {id:'12', time:'06-07 PM', available: [false, false, false, false, false, false, false]},\n        {id:'13', time:'07-08 PM', available: [false, false, false, false, false, false, false]},\n        {id:'14', time:'08-09 PM', available: [false, false, false, false, false, false, false]}\n    ],\n\n    // local state of page\n    isViewing: false,\n\n    // local state of page\n    isCreating: true\n\n}\n\n\n/**\n * cloneTable\n * \n * @desc Clones a given table to prevent state destruction\n * @param {array} table 'table' array\n * @param {boolean} empty remove or keep already selected time slots\n*/\nconst cloneTable = (table, empty) => {\n    let newTable = [];\n    table.forEach((element) => {\n        newTable.push({...element})\n        newTable[newTable.length-1].available = [...element.available]\n        if(empty){\n            newTable[newTable.length-1].available.fill(false)\n        }\n    })\n    return(newTable)\n}\n\n/**\n * cloneSavedDefault\n * \n * @desc Clones the time preferences list to prevent state destruction (when user views)\n * @desc Resets text for each element to 'View'\n * @param {array} saved 'saved' array\n*/\nconst cloneSavedDefault = (saved) => {\n    let newSaved = []\n    saved.forEach(function(element){\n        newSaved.push({...element})\n        newSaved[newSaved.length-1].text = 'Select'\n    })\n    return(newSaved)\n}\n\n/**\n * cloneSavedEdit\n * \n * @desc Clones the time preferences list to prevent state destruction (when user edits)\n * @desc State of editting is changed for the specific element that created the action \n * @param {array} saved 'saved' array\n * @param {*} id schedule id\n*/\nconst cloneSavedEdit = (saved, id) => {\n    let newSaved = []\n    saved.forEach(function(element){\n        newSaved.push({...element})\n        if(element.id === id){\n            newSaved[newSaved.length-1].isEdit = !newSaved[newSaved.length-1].isEdit\n        }\n    })\n    return(newSaved)\n}\n\n/*\n * --- Modifies state according to dipsatched action \n*/\nconst timeReducer = (state=initState, action=null) => {\n\n    switch(action.type){\n\n        /* // When user is editing the Time name */\n        case 'TIME_NAME_EDIT':\n            let editSaved = cloneSavedEdit(state.saved, action.id)\n            return{\n                ...state,\n                saved: editSaved\n            }\n\n        /* // When user is saving the Time name */\n        case 'TIME_NAME_SAVE':\n            let addSaved = cloneSavedEdit(state.saved, action.id)\n            addSaved[action.index].name = action.name\n            return{\n                ...state,\n                saved: addSaved\n            }\n\n        /* // When user chooses on a specific time */\n        case 'CHANGE AVAILABILITY':\n            if(state.isViewing === false){\n                let changeTable = cloneTable(state.table, false)\n                changeTable[action.row_id].available[action.col_id] = !changeTable[action.row_id].available[action.col_id]\n                return {\n                    ...state,\n                    table: changeTable,\n                }\n            }\n            break;\n\n        /* // When user wants to view a saved time preference */\n        case 'TIME_VIEW':\n            let viewSaved = cloneSavedDefault(state.saved)\n            if(state.saved[action.index].text === 'Select'){\n                let savedTable = cloneTable(state.availability, false)\n                viewSaved[action.index].text = 'Selected'\n                return {\n                    ...state,\n                    saved: viewSaved,\n                    table: savedTable,\n                    isViewing: true\n                }\n\n            /* // When user doesn't want to view a saved time preference */\n            }else{\n                let empty = cloneTable(state.table, true)\n                return {\n                    ...state,\n                    saved: viewSaved,\n                    table: empty,\n                    isViewing: false\n                }\n            }\n\n        /* // When user wants to view a saved time preference */\n        case 'TIME_SAVE':\n            let newTimeTable = cloneTable(state.table, true)\n            let newSaved = cloneSavedDefault(state.saved)\n\n            // *** need to get name that user inputs here\n            // *** neee to get id from database\n            let newTime = {id: (parseInt(state.saved[state.saved.length-1].id)+1).toString(),\n                           name: action.name, text: 'Select', isEdit: false }\n            newSaved.push(newTime)\n            return{\n                ...state,\n                saved: newSaved,\n                table: newTimeTable,\n                isViewing: false\n            }\n\n        /* // When user clears table */\n        case 'TIME_CLEAR':\n            let emptyTable = cloneTable(state.table, true)\n            let emptySaved = cloneSavedDefault(state.saved)\n            return {\n                ...state,\n                saved: emptySaved,\n                table: emptyTable,\n                isViewing: false\n            }\n\n        /* // When user deletes a time preference */\n        case 'TIME_DELETE':\n            let newSavedList = state.saved.filter(element => {\n                return element.id !== action.id\n            })\n            return{\n                ...state,\n                saved: newSavedList\n            }\n\n        default:\n            return state;\n    }\n    return state;\n}\n\nexport default timeReducer;","const initState = {\n\n    /**\n     * descriptors\n     * \n     * @desc List of column descriptors for a schedule\n     */\n    descriptors:[\n        'Class Name', 'Sec.', 'Class #', 'Instructor', 'Open', 'Reserved', \n        'Taken', 'Waitlist', 'Status', 'Days', 'Start', 'End'\n    ],\n\n    /**\n     * schedules\n     * \n     * @desc Contains all the possible schedules\n     * @param {String} id schedule identifier\n     * @param {String} name schedule name\n     * @param {Array} classes classes for a given schedule\n     * @param {Array} times time table for a given schedule\n     */\n    schedules:[\n        { id: '0',\n          name: 'Schedule 1',\n          classes:[\n            {name:'CSC 300', sec:'LEC', num:'6807', instr:'Sakellarious, N.', open:'22', res:'0', tak:'13', wait:'0', status:'Open', days:'TR', start:'12:00 PM', end:'01:30 PM'},\n            {name:'CSC 300', sec:'LAB', num:'6808', instr:'Sakellarious, N.', open:'22', res:'0', tak:'13', wait:'0', status:'Open', days:'TR', start:'01:40 PM', end:'03:00 PM'},\n            {name:'CSC 309', sec:'LEC', num:'6798', instr:'Falessi, D.', open:'22', res:'0', tak:'13', wait:'0', status:'Open', days:'MWF', start:'10:00 AM', end:'11:00 AM'},\n            {name:'CSC 309', sec:'LAB', num:'6799', instr:'Falessi, D.', open:'22', res:'0', tak:'13', wait:'0', status:'Open', days:'MWF', start:'11:00 AM', end:'12:00 PM'}\n          ],\n          times: [\n              {id:'0', time:'07-08 AM', available: [false, false, false, false, false, false, false]},\n              {id:'1', time:'08-09 AM', available: [false, false, false, false, false, false, false]},\n              {id:'2', time:'09-10 AM', available: [false, false, false, false, false, false, false]},\n              {id:'3', time:'10-11 AM', available: [false, true, false, true, false, true, false]},\n              {id:'4', time:'11-12 AM', available: [false, true, false, true, false, true, false]},\n              {id:'5', time:'12-01 PM', available: [false, false, true, false, true, false, false]},\n              {id:'6', time:'01-02 PM', available: [false, false, true, false, true, false, false]},\n              {id:'7', time:'02-03 PM', available: [false, false, true, false, true, false, false]},\n              {id:'8', time:'03-04 PM', available: [false, false, false, false, false, false, false]},\n              {id:'9', time:'04-05 PM', available: [false, false, false, false, false, false, false]},\n              {id:'10', time:'05-06 PM', available: [false, false, false, false, false, false, false]},\n              {id:'11', time:'05-06 PM', available: [false, false, false, false, false, false, false]},\n              {id:'12', time:'06-07 PM', available: [false, false, false, false, false, false, false]},\n              {id:'13', time:'07-08 PM', available: [false, false, false, false, false, false, false]},\n              {id:'14', time:'08-09 PM', available: [false, false, false, false, false, false, false]}\n          ],\n        },\n\n        { id: '1',\n          name: 'Schedule 2',\n          classes:[\n            {name:'CSC 300', sec:'LEC', num:'6807', instr:'Sakellarious, N.', open:'22', res:'0', tak:'13', wait:'0', status:'Open', days:'TR', start:'12:00 PM', end:'01:30 PM'},\n            {name:'CSC 300', sec:'LAB', num:'6808', instr:'Sakellarious, N.', open:'22', res:'0', tak:'13', wait:'0', status:'Open', days:'TR', start:'01:40 PM', end:'03:00 PM'},\n            {name:'CSC 309', sec:'LEC', num:'6798', instr:'Falessi, D.', open:'22', res:'0', tak:'13', wait:'0', status:'Open', days:'MWF', start:'10:00 AM', end:'11:00 AM'},\n            {name:'CSC 309', sec:'LAB', num:'6799', instr:'Falessi, D.', open:'22', res:'0', tak:'13', wait:'0', status:'Open', days:'MWF', start:'11:00 AM', end:'12:00 PM'}\n          ],\n          times: [\n              {id:'0', time:'07-08 AM', available: [false, false, false, false, false, false, false]},\n              {id:'1', time:'08-09 AM', available: [false, false, false, false, false, false, false]},\n              {id:'2', time:'09-10 AM', available: [false, false, false, false, false, false, false]},\n              {id:'3', time:'10-11 AM', available: [false, true, false, true, false, true, false]},\n              {id:'4', time:'11-12 AM', available: [false, true, false, true, false, true, false]},\n              {id:'5', time:'12-01 PM', available: [false, false, true, false, true, false, false]},\n              {id:'6', time:'01-02 PM', available: [false, false, true, false, true, false, false]},\n              {id:'7', time:'02-03 PM', available: [false, false, true, false, true, false, false]},\n              {id:'8', time:'03-04 PM', available: [false, false, false, false, false, false, false]},\n              {id:'9', time:'04-05 PM', available: [false, false, false, false, false, false, false]},\n              {id:'10', time:'05-06 PM', available: [false, false, false, false, false, false, false]},\n              {id:'11', time:'05-06 PM', available: [false, false, false, false, false, false, false]},\n              {id:'12', time:'06-07 PM', available: [false, false, false, false, false, false, false]},\n              {id:'13', time:'07-08 PM', available: [false, false, false, false, false, false, false]},\n              {id:'14', time:'08-09 PM', available: [false, false, false, false, false, false, false]}\n          ],\n        },\n\n        { id: '2',\n          name: 'Schedule 3',\n          classes:[\n            {name:'CSC 300', sec:'LEC', num:'6807', instr:'Sakellarious, N.', open:'22', res:'0', tak:'13', wait:'0', status:'Open', days:'TR', start:'12:00 PM', end:'01:30 PM'},\n            {name:'CSC 300', sec:'LAB', num:'6808', instr:'Sakellarious, N.', open:'22', res:'0', tak:'13', wait:'0', status:'Open', days:'TR', start:'01:40 PM', end:'03:00 PM'},\n            {name:'CSC 309', sec:'LEC', num:'6798', instr:'Falessi, D.', open:'22', res:'0', tak:'13', wait:'0', status:'Open', days:'MWF', start:'10:00 AM', end:'11:00 AM'},\n            {name:'CSC 309', sec:'LAB', num:'6799', instr:'Falessi, D.', open:'22', res:'0', tak:'13', wait:'0', status:'Open', days:'MWF', start:'11:00 AM', end:'12:00 PM'}\n          ],\n          times: [\n              {id:'0', time:'07-08 AM', available: [false, false, false, false, false, false, false]},\n              {id:'1', time:'08-09 AM', available: [false, false, false, false, false, false, false]},\n              {id:'2', time:'09-10 AM', available: [false, false, false, false, false, false, false]},\n              {id:'3', time:'10-11 AM', available: [false, true, false, true, false, true, false]},\n              {id:'4', time:'11-12 AM', available: [false, true, false, true, false, true, false]},\n              {id:'5', time:'12-01 PM', available: [false, false, true, false, true, false, false]},\n              {id:'6', time:'01-02 PM', available: [false, false, true, false, true, false, false]},\n              {id:'7', time:'02-03 PM', available: [false, false, true, false, true, false, false]},\n              {id:'8', time:'03-04 PM', available: [false, false, false, false, false, false, false]},\n              {id:'9', time:'04-05 PM', available: [false, false, false, false, false, false, false]},\n              {id:'10', time:'05-06 PM', available: [false, false, false, false, false, false, false]},\n              {id:'11', time:'05-06 PM', available: [false, false, false, false, false, false, false]},\n              {id:'12', time:'06-07 PM', available: [false, false, false, false, false, false, false]},\n              {id:'13', time:'07-08 PM', available: [false, false, false, false, false, false, false]},\n              {id:'14', time:'08-09 PM', available: [false, false, false, false, false, false, false]}\n          ],\n        }\n    ],\n\n    /**\n     * savedSchedules\n     * \n     * @desc Contains a list of saved schedules\n     * @param {String} id schedule identifier\n     * @param {String} name schedule name\n     * @param {Array} classes classes for a given schedule\n     * @param {Array} times time table for a given schedule\n     */\n    savedSchedules:[],\n\n    /**\n     * viewing\n     * \n     * @desc Reflects the state of the viewing button\n     * @param {String} text either 'View' or 'Collapse'\n     */\n    viewing: [\n        {text: 'View'},\n        {text: 'View'},\n        {text: 'View'}\n    ],\n    \n    /**\n     * sorters\n     * \n     * @desc Contains the different sorters\n     * @param {String} id sorter identifier\n     * @param {String} name sorter name\n     */    \n    sorters: [\n        {id:'0', name:'Earliest'},\n        {id:'1', name:'Latest'},\n        {id:'2', name:'Least Hours'},\n        {id:'3', name:'Most Hours'},\n        {id:'4', name:'Least Classes'},\n        {id:'5', name:'Most Classes'}\n    ],\n\n    /**\n     * filters\n     * \n     * @desc Contains the different filters\n     * @param {String} id filter identifier\n     * @param {String} name filter name\n     */\n    filters: [\n        {id: '0', name: '12 Units'},\n        {id: '1', name: '16 Units'},\n        {id: '2', name: 'Not Waitlisted'}\n    ],\n\n    /* // contains identifiers for the schedules the user wants to save */\n    saved:[],\n\n    /* // contains identifiers for the schedules the user selects */\n    selected: [],\n\n    /* // local state of page */\n    isViewing: false\n}\n\n/*\n * --- Clones a given schedule to prevent state destruction\n*/\n/*\nconst cloneSchedules = (schedules) => {\n    let newSchedules = []\n    schedules.map(schedule => {\n        newSchedules.push(...schedule)\n        newSchedules[newSchedules.length-1].classes = [...schedule.classes]\n    })\n    return(newSchedules)\n}\n*/\n\n/**\n * filterSchedules\n * \n * @desc Filter the list of schedules to grab only the schedules that were selected. \n * @desc Prevents state destruction \n * @param {array} schedules 'schedules' array\n * @param {array} selected 'selected' array\n*/\nconst filterSchedules = (schedules, selected) => {\n    let newSchedules = []\n    schedules.forEach((schedule) => {\n        if(selected.includes(schedule.id)){\n            newSchedules.push({...schedule})\n            newSchedules[newSchedules.length-1].classes = [...schedule.classes]\n        }\n    })\n    return(newSchedules)\n}\n\n/**\n * viewing\n * \n * @desc Clones the viewing list to prevent state destruction\n * @desc Resets text for each element to 'View'\n * @param {array} 'viewing' array\n*/\nconst cloneViewing = (viewing) => {\n    let newViewing = []\n    viewing.forEach(function(element){\n        newViewing.push({...element})\n        newViewing[newViewing.length-1].text = 'View'\n    })\n    return(newViewing)\n}\n\n/**\n * --- Modifies the state according to dispatched action \n*/\nconst scheduleReducer = (state=initState, action=null) => {\n    switch(action.type){\n        \n        /* // When user is viewing a schedule */\n        case 'SCHEDULE_VIEW':\n            let editViewing = cloneViewing(state.viewing);\n            if(state.viewing[action.index].text === 'View'){\n                editViewing[action.index].text = 'Collapse'\n                return{\n                    ...state,\n                    viewing: editViewing\n                }\n            \n            /* // When user collapses a schedule */\n            }else{\n                return{\n                    ...state,\n                    viewing: editViewing\n                }\n            }\n\n        /* // When user selects a schedule */\n        case 'SCHEDULE_SELECT':\n            let haveSelected = [...state.selected, action.id]\n            return{\n                ...state,\n                selected: haveSelected\n            }\n\n        /* // When user deselects a schedule */\n        case 'SCHEDULE_DESELECT':\n            let haveNotSelected = state.selected.filter(id => {\n                return id !== action.id\n            })\n            return{\n                ...state,\n                selected: haveNotSelected\n            }\n        \n        /* // When user filters the list of schedules */\n        case 'SCHEDULE_FILTER':\n            break;\n\n        /* // When user sorts the list of schedules */\n        case 'SCHEDULE_SORT':\n            break;\n\n        /* // When user saves a selected set schedules */\n        case 'SCHEDULE_SAVE':\n            let newSaved = [...new Set([...state.saved, ...state.selected])]\n            let newSavedSchedules = filterSchedules(state.schedules, newSaved)\n            let newViewing = cloneViewing(state.viewing)\n            return{\n                ...state,\n                saved: newSaved,\n                savedSchedules: newSavedSchedules,\n                viewing: newViewing,\n                selected: []\n            }\n        default:\n            return state;\n    }\n    return state;\n}\n\nexport default scheduleReducer;","import { produce } from \"immer\";\n\nconst initState = {\n  csc_major: [\n    \"CSC/CPE 101\",\n    \"CSC/CPE 123\",\n    \"CSC/CPE 108\",\n    \"CSC/CPE 202\",\n    \"CSC/CPE 203\",\n    \"CSC 225\",\n    \"CSC 300\",\n    \"CSC 307\",\n    \"CSC 308\",\n    \"CSC 309\",\n    \"CPE 315\",\n    \"CSC 348\",\n    \"CSC 349\",\n    \"CSC/CPE 357\",\n    \"CSC 430\",\n    \"CSC/CPE 431\",\n    \"CSC 445\",\n    \"CSC/CPE 453\",\n    \"CSC 491\",\n    \"CSC 492\",\n    \"CSC 497\",\n    \"CSC 498\"\n  ],\n  csc_support: [\n    \"ENGL 149\",\n    \"MATH 141\",\n    \"MATH 142\",\n    \"MATH 143\",\n    \"MATH 206\",\n    \"MATH 244\",\n    \"STAT 312\",\n    \"BIO 111\",\n    \"BIO 161\",\n    \"BIO 213\",\n    \"BMED 213\",\n    \"BOT 121\",\n    \"MCRO 221\",\n    \"MCRO 224\",\n    \"MATH 241\",\n    \"MATH 248\",\n    \"MATH 306\",\n    \"MATH 335\",\n    \"MATH 336\",\n    \"MATH 437\",\n    \"MATH 470\",\n    \"STAT 313\",\n    \"STAT 323\",\n    \"STAT 324\",\n    \"STAT 330\",\n    \"STAT 331\",\n    \"STAT 334\",\n    \"STAT 416\",\n    \"STAT 418\",\n    \"STAT 419\",\n    \"STAT 434\",\n    \"CHEM 124\",\n    \"CHEM 125\",\n    \"CHEM 126\",\n    \"PHYS 141\",\n    \"PHYS 132\",\n    \"PHYS 133\",\n    \"BIO 111\",\n    \"BIO 161\",\n    \"BOT 121\",\n    \"CHEM 124\",\n    \"MCRO 221\",\n    \"MCRO 224\",\n    \"PHYS 141\"\n  ],\n\n  ge_list: [\n    \"Expository Writing (A1)\",\n    \"Oral Communication (A2)\",\n    \"Reasoning, Argumentation, Writing (A3)\",\n    \"Mathematics/Stats (B1)\",\n    \"Life Science (B2)\",\n    \"Physical Science (B3)\",\n    \"Science/Math Elective (B1-5)\",\n    \"Uppder-Div Science/Math (B6)\",\n    \"Literature (C1)\",\n    \"Philosophy (C2)\",\n    \"Fine and Performing Arts (C3)\",\n    \"Arts/Humanities Elective (C1-5)\",\n    \"The American Experience (D1)\",\n    \"Political Economy (D2)\",\n    \"Comparative Social Institutions (D3)\",\n    \"Self Development (D4)\",\n    \"Arts and Humanities - Upper Division\",\n    \"Society and the Individual - Upper Division\",\n    \"Technology (F)\"\n  ],\n\n  courses_taken: [\n    \"CSC/CPE 101\",\n    \"CSC/CPE 123\",\n    \"CSC/CPE 108\",\n    \"CSC/CPE 202\",\n    \"CSC/CPE 203\"\n  ],\n\n  desired_courses: [\"MATH 143\"]\n};\n\nconst courseHistoryReducer = (state = initState, action = null) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case \"REMOVE_HISTORY\":\n        draft.courses_taken = [];\n        state.courses_taken.forEach(course => {\n          if (course !== action.courseName) {\n            draft.courses_taken.push(course);\n          }\n        });\n        break;\n\n      case \"ADD_HISTORY\":\n        draft.courses_taken.push(action.courseName);\n        break;\n\n      case \"REMOVE_DESIRED\":\n        draft.desired_courses = [];\n        state.desired_courses.forEach(course => {\n          if (course !== action.courseName) {\n            draft.desired_courses.push(course);\n          }\n        });\n        break;\n\n      case \"ADD_DESIRED\":\n        draft.desired_courses.push(action.courseName);\n        break;\n\n      default:\n        break;\n    }\n  });\n\nexport default courseHistoryReducer;\n","const initState = {\n  /**\n   * flowchart\n   *\n   * @desc Contains information for grid layout for a given flowchart\n   * @param {String} type the type of course\n   * @param {String} len the length of quarters the course spans in the flowchart\n   */\n  flowchart: {\n    row1: [\n      { id: \"0\", type: \"CSC\", len: \"1\", name: \"CSC/CPE 123\" },\n      { id: \"1\", type: \"CSC\", len: \"1\", name: \"CSC/CPE 101\" },\n      { id: \"2\", type: \"CSC\", len: \"1\", name: \"CSC/CPE 202\" },\n      { id: \"3\", type: \"CSC\", len: \"1\", name: \"CSC/CPE 203\" },\n      { id: \"4\", type: \"CSC\", len: \"2\", name: \"CSC 348\" },\n      { id: \"5\", type: \"CSC\", len: \"6\", name: \"CSC/CPE 453\" }\n    ],\n\n    row2: [\n      { id: \"6\", type: \"\", len: \"2\" },\n      { id: \"7\", type: \"Support\", len: \"1\", name: \"LS Support\" },\n      { id: \"8\", type: \"CSC\", len: \"1\", name: \"CSC 225\" },\n      { id: \"9\", type: \"CSC\", len: \"1\", name: \"CSC/CPE 357\" },\n      { id: \"10\", type: \"Support\", len: \"1\", name: \"M/S Support\" },\n      { id: \"11\", type: \"CSC\", len: \"1\", name: \"CPE 315\" },\n      { id: \"12\", type: \"CSC\", len: \"1\", name: \"CSC 300\" },\n      { id: \"13\", type: \"CSC\", len: \"1\", name: \"Tech Elective\" },\n      { id: \"14\", type: \"CSC\", len: \"1\", name: \"Tech Elective\" },\n      { id: \"15\", type: \"CSC\", len: \"1\", name: \"CSC 491\" },\n      { id: \"16\", type: \"CSC\", len: \"1\", name: \"CSC 492\" }\n    ],\n\n    row3: [\n      { id: \"17\", type: \"Support\", len: \"1\", name: \"MATH 141\" },\n      { id: \"18\", type: \"Support\", len: \"1\", name: \"MATH 142\" },\n      { id: \"19\", type: \"Support\", len: \"1\", name: \"MATH 143\" },\n      { id: \"20\", type: \"Support\", len: \"1\", name: \"MATH 244\" },\n      { id: \"21\", type: \"Support\", len: \"1\", name: \"MATH 206\" },\n      { id: \"22\", type: \"Support\", len: \"1\", name: \"STAT 312\" },\n      { id: \"23\", type: \"CSC\", len: \"1\", name: \"CSC 349\" },\n      { id: \"24\", type: \"CSC\", len: \"1\", name: \"CSC 430\" },\n      { id: \"25\", type: \"CSC\", len: \"1\", name: \"CSC 431\" },\n      { id: \"26\", type: \"CSC\", len: \"1\", name: \"CSC 445\" },\n      { id: \"27\", type: \"CSC\", len: \"1\", name: \"Tech Elective\" },\n      { id: \"28\", type: \"CSC\", len: \"1\", name: \"Tech Elective\" }\n    ],\n\n    row4: [\n      { id: \"29\", type: \"GE\", len: \"3\", name: \"ENGL 133/134\" },\n      { id: \"30\", type: \"Support\", len: \"1\", name: \"Phys / Chem 1\" },\n      { id: \"31\", type: \"Support\", len: \"1\", name: \"Phys / Chem 2\" },\n      { id: \"32\", type: \"Support\", len: \"1\", name: \"Phys / Chem 3\" },\n      { id: \"33\", type: \"CSC\", len: \"1\", name: \"CSC 307\" },\n      { id: \"34\", type: \"CSC\", len: \"1\", name: \"Tech Elective\" },\n      { id: \"35\", type: \"\", len: \"1\" },\n      { id: \"36\", type: \"CSC\", len: \"1\", name: \"Tech Elective\" },\n      { id: \"37\", type: \"CSC\", len: \"1\", name: \"Tech Elective\" },\n      { id: \"38\", type: \"Support\", len: \"1\", name: \"UD Support\" }\n    ],\n\n    row5: [\n      { id: \"39\", type: \"GE\", len: \"3\", name: \"COMS 101/102\" },\n      { id: \"40\", type: \"\", len: \"9\" }\n    ],\n\n    row6: [\n      { id: \"41\", type: \"\", len: \"1\" },\n      { id: \"42\", type: \"Support\", len: \"4\", name: \"ENGL 149\" },\n      { id: \"43\", type: \"\", len: \"1\" },\n      { id: \"44\", type: \"Support\", len: \"1\", name: \"Add. Support\" },\n      { id: \"45\", type: \"\", len: \"2\" },\n      { id: \"46\", type: \"Support\", len: \"1\", name: \"Add. Support\" },\n      { id: \"47\", type: \"\", len: \"2\" }\n    ],\n\n    row7: [\n      { id: \"48\", type: \"GE\", len: \"1\", name: \"**\" },\n      { id: \"49\", type: \"GE\", len: \"1\", name: \"**\" },\n      { id: \"50\", type: \"\", len: \"2\" },\n      { id: \"51\", type: \"GE\", len: \"2\", name: \"**\" },\n      { id: \"52\", type: \"\", len: \"1\" },\n      { id: \"53\", type: \"GE\", len: \"1\", name: \"**\" },\n      { id: \"54\", type: \"GE\", len: \"1\", name: \"**\" },\n      { id: \"55\", type: \"\", len: \"1\" },\n      { id: \"56\", type: \"GE\", len: \"1\", name: \"**\" },\n      { id: \"57\", type: \"GE\", len: \"1\", name: \"**\" }\n    ]\n  }\n};\n\n/**\n * --- Modifies the state according to dispatched action\n */\nconst flowchartReducer = (state = initState, action = null) => {\n  //    switch(action.type){\n  //        default:\n  //            return state\n  //    }\n  return state;\n};\n\nexport default flowchartReducer;\n","import studentReducer from \"./studentReducer\";\nimport timeReducer from \"./timeReducer\";\nimport scheduleReducer from \"./scheduleReducer\";\nimport courseHistoryReducer from \"./courseHistoryReducer\";\nimport { combineReducers } from \"redux\";\nimport flowchartReducer from \"./flowchartReducer\";\n\n/**\n * Root Reducer\n *\n * @desc Combines all the reducers\n * @param {studentReducer} student for dashboard\n * @param {timeReducer} time for time availability\n * @param {scheduleReducer} schedule for saved and potential schedules\n * @param {flowchartReducer} flowchart for desired courses and course history\n */\n\nconst rootReducer = combineReducers({\n  student: studentReducer,\n  time: timeReducer,\n  schedule: scheduleReducer,\n  courseHistory: courseHistoryReducer,\n  flowchart: flowchartReducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./store/reducers/rootReducer\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time_table\":\"TimeTable_time_table__3NB9Z\",\"table_tr\":\"TimeTable_table_tr__1f5rF\",\"day_name\":\"TimeTable_day_name__lNEPy\",\"time_slot\":\"TimeTable_time_slot___GZlc\",\"table_td\":\"TimeTable_table_td__Cp0vJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"SchedList_li__T0hYx\",\"ul\":\"SchedList_ul__1lmW7\",\"empty\":\"SchedList_empty__oiZ0x\",\"sched_entry\":\"SchedList_sched_entry__24jIR\",\"sched_name\":\"SchedList_sched_name__2x3KX\",\"check_container\":\"SchedList_check_container__2-YOT\",\"green_check_box\":\"SchedList_green_check_box__3GXtH\",\"box_green\":\"SchedList_box_green__eXzS9\",\"lever\":\"SchedList_lever__1cZ3N\",\"filled-in\":\"SchedList_filled-in__3y6TT\",\"modified\":\"SchedList_modified__w6AEr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid_container\":\"Flow_grid_container__3FuVH\",\"box\":\"Flow_box__3a25O\",\"csc_box\":\"Flow_csc_box__2UAwh\",\"support_box\":\"Flow_support_box__1N8OW\",\"ge_box\":\"Flow_ge_box__IowQ_\",\"empty_box\":\"Flow_empty_box__25eZF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"Time_main_container__3CQ6r\",\"saved_container\":\"Time_saved_container__e1FM_\",\"saved_content\":\"Time_saved_content__U_N-q\",\"name_list\":\"Time_name_list__2jYeJ\",\"selection_container\":\"Time_selection_container__CPKva\",\"selection_content\":\"Time_selection_content__2R3U3\",\"table_container\":\"Time_table_container__3o1d5\",\"button_container\":\"Time_button_container__GNl3Q\",\"time-table-container\":\"Time_time-table-container__2q2y1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sched_table\":\"Schedule_sched_table__x3Ckv\",\"sched_header\":\"Schedule_sched_header__lswt6\",\"sched_row\":\"Schedule_sched_row__31wXs\",\"sched_cell\":\"Schedule_sched_cell__sqtB0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"MainSched_main_container__1X7fH\",\"list_container\":\"MainSched_list_container__12xRr\",\"filter_container\":\"MainSched_filter_container__2pevk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"slot_container\":\"TimeName_slot_container__3S1qc\",\"time_name\":\"TimeName_time_name__WEFUr\",\"button_container\":\"TimeName_button_container__5kxcX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"SchedExpand_layout__EGSpX\",\"image\":\"SchedExpand_image__B4SFF\",\"smallTable\":\"SchedExpand_smallTable__GMgbs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown_content\":\"Dropdown_dropdown_content__3eK5f\",\"dropdown\":\"Dropdown_dropdown__pgqbb\",\"drop\":\"Dropdown_drop__28xdh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time_ul\":\"SavedTimes_time_ul__2hf25\",\"time_li\":\"SavedTimes_time_li__12WE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sf_container\":\"SortFilter_sf_container__1zyYu\",\"content_container\":\"SortFilter_content_container__26WRH\"};"],"sourceRoot":""}